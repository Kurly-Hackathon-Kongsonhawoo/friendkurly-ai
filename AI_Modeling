{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A7nFUNrB6Tzd","executionInfo":{"status":"ok","timestamp":1662617823313,"user_tz":-540,"elapsed":42588,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"bd3c0745-f389-4252-d335-77bc77e6d985"},"id":"A7nFUNrB6Tzd","execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"id":"7b6dce51","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"7b6dce51","executionInfo":{"status":"ok","timestamp":1662617838003,"user_tz":-540,"elapsed":3948,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"3a59daa6-bdf4-4fe2-9292-5313f5b3ea5c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   order_id  user_id eval_set  order_number  order_dow  order_hour_of_day  \\\n","0   2539329        1    prior             1          2                  8   \n","1   2398795        1    prior             2          3                  7   \n","2    473747        1    prior             3          3                 12   \n","3   2254736        1    prior             4          4                  7   \n","4    431534        1    prior             5          4                 15   \n","5   3367565        1    prior             6          2                  7   \n","6    550135        1    prior             7          1                  9   \n","7   3108588        1    prior             8          1                 14   \n","8   2295261        1    prior             9          1                 16   \n","9   2550362        1    prior            10          4                  8   \n","\n","   days_since_prior_order  \n","0                     NaN  \n","1                    15.0  \n","2                    21.0  \n","3                    29.0  \n","4                    28.0  \n","5                    19.0  \n","6                    20.0  \n","7                    14.0  \n","8                     0.0  \n","9                    30.0  "],"text/html":["\n","  <div id=\"df-b47ed4f4-c2db-4ea0-8b45-1e074cadf801\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2539329</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2398795</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>473747</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2254736</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>431534</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3367565</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>550135</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>3108588</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2295261</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>16</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2550362</td>\n","      <td>1</td>\n","      <td>prior</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>30.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b47ed4f4-c2db-4ea0-8b45-1e074cadf801')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b47ed4f4-c2db-4ea0-8b45-1e074cadf801 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b47ed4f4-c2db-4ea0-8b45-1e074cadf801');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["import pandas as pd\n","import numpy as np\n","\n","# order_df = pd.read_csv('./instacart-market-basket-analysis/orders.csv')\n","order_df = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/orders.csv')\n","\n","order_df.head(10)"]},{"cell_type":"code","execution_count":4,"id":"ee32614e","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ee32614e","executionInfo":{"status":"ok","timestamp":1662617841942,"user_tz":-540,"elapsed":8,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"f8de10af-dae2-4638-c412-d737e4eaea80"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                       0\n","user_id                        0\n","eval_set                       0\n","order_number                   0\n","order_dow                      0\n","order_hour_of_day              0\n","days_since_prior_order    206209\n","dtype: int64"]},"metadata":{},"execution_count":4}],"source":["order_df.isnull().sum()"]},{"cell_type":"code","execution_count":5,"id":"5fca7b6c","metadata":{"id":"5fca7b6c","executionInfo":{"status":"ok","timestamp":1662617850248,"user_tz":-540,"elapsed":975,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"outputs":[],"source":["# order_df.fillna(0, inplace=True) # days_since_prior_order 결측치 보정\n","# 결측치 제거\n","order_df.dropna(inplace=True)"]},{"cell_type":"code","execution_count":6,"id":"de75b384","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"de75b384","executionInfo":{"status":"ok","timestamp":1662617851333,"user_tz":-540,"elapsed":10,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"f210be0e-5d11-4488-c50f-8a76d4d86334"},"outputs":[{"output_type":"stream","name":"stdout","text":["(3214874, 7)\n"]},{"output_type":"execute_result","data":{"text/plain":["prior    3008665\n","train     131209\n","test       75000\n","Name: eval_set, dtype: int64"]},"metadata":{},"execution_count":6}],"source":["# order_dow: 주문요일\n","# order_hour_of_day: 주문 시간대\n","# days_since_prior_order: 0이면 즉각 구매 (당일 구매), 숫자가 클 수록 재구매 주기가 긴 것!\n","\n","print(order_df.shape)\n","order_df['eval_set'].value_counts()"]},{"cell_type":"code","execution_count":7,"id":"08fd0883","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"08fd0883","executionInfo":{"status":"ok","timestamp":1662617851821,"user_tz":-540,"elapsed":4,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"87a5a0bf-2c22-4631-92eb-72ecaf6cd9d8"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3214874 entries, 1 to 3421082\n","Data columns (total 7 columns):\n"," #   Column                  Dtype  \n","---  ------                  -----  \n"," 0   order_id                int64  \n"," 1   user_id                 int64  \n"," 2   eval_set                object \n"," 3   order_number            int64  \n"," 4   order_dow               int64  \n"," 5   order_hour_of_day       int64  \n"," 6   days_since_prior_order  float64\n","dtypes: float64(1), int64(5), object(1)\n","memory usage: 196.2+ MB\n"]}],"source":["order_df.info()"]},{"cell_type":"code","source":["order_df[order_df['user_id'] == 10] # 주문데이터 분석: user당 prior, train 주문기록 확인"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7Dg19XC82PNb","executionInfo":{"status":"ok","timestamp":1662617855837,"user_tz":-540,"elapsed":8,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"3a3f70d3-675b-4b70-ab92-6bdb3eaff04a"},"id":"7Dg19XC82PNb","execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    order_id  user_id eval_set  order_number  order_dow  order_hour_of_day  \\\n","84     68288       10    prior             2          5                 15   \n","85   2115522       10    prior             3          3                 19   \n","86     83395       10    prior             4          3                 15   \n","87   1353310       10    prior             5          5                 20   \n","88   1822501       10    train             6          0                 19   \n","\n","    days_since_prior_order  \n","84                    30.0  \n","85                    12.0  \n","86                    14.0  \n","87                    23.0  \n","88                    30.0  "],"text/html":["\n","  <div id=\"df-b33c7e0a-eb22-499f-8c54-7347ebb3404f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>84</th>\n","      <td>68288</td>\n","      <td>10</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>2115522</td>\n","      <td>10</td>\n","      <td>prior</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>19</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>83395</td>\n","      <td>10</td>\n","      <td>prior</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>1353310</td>\n","      <td>10</td>\n","      <td>prior</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>23.0</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>1822501</td>\n","      <td>10</td>\n","      <td>train</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>30.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b33c7e0a-eb22-499f-8c54-7347ebb3404f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b33c7e0a-eb22-499f-8c54-7347ebb3404f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b33c7e0a-eb22-499f-8c54-7347ebb3404f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["order_df[order_df['user_id'].isin(order_df['user_id'][order_df['eval_set']== 'test'])]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"f0qNLX7J2fOC","executionInfo":{"status":"ok","timestamp":1662617860318,"user_tz":-540,"elapsed":504,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"5d9db0d5-2b22-4415-deee-71e57cf71d2f"},"id":"f0qNLX7J2fOC","execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","27         444309        3    prior             2          3   \n","28        3002854        3    prior             3          3   \n","29        2037211        3    prior             4          2   \n","30        2710558        3    prior             5          0   \n","31        1972919        3    prior             6          0   \n","...           ...      ...      ...           ...        ...   \n","3421064   3059777   206208    prior            46          1   \n","3421065   2239861   206208    prior            47          3   \n","3421066   1285346   206208    prior            48          1   \n","3421067   1882108   206208    prior            49          1   \n","3421068    803273   206208     test            50          5   \n","\n","         order_hour_of_day  days_since_prior_order  \n","27                      19                     9.0  \n","28                      16                    21.0  \n","29                      18                    20.0  \n","30                      17                    12.0  \n","31                      16                     7.0  \n","...                    ...                     ...  \n","3421064                 10                    13.0  \n","3421065                  4                     9.0  \n","3421066                 11                     5.0  \n","3421067                 22                     7.0  \n","3421068                 11                     4.0  \n","\n","[1167497 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-3cf3bd5c-0261-47de-a2b3-aeae7155d536\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>27</th>\n","      <td>444309</td>\n","      <td>3</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>19</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>3002854</td>\n","      <td>3</td>\n","      <td>prior</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>16</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2037211</td>\n","      <td>3</td>\n","      <td>prior</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>18</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2710558</td>\n","      <td>3</td>\n","      <td>prior</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>1972919</td>\n","      <td>3</td>\n","      <td>prior</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3421064</th>\n","      <td>3059777</td>\n","      <td>206208</td>\n","      <td>prior</td>\n","      <td>46</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421065</th>\n","      <td>2239861</td>\n","      <td>206208</td>\n","      <td>prior</td>\n","      <td>47</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421066</th>\n","      <td>1285346</td>\n","      <td>206208</td>\n","      <td>prior</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421067</th>\n","      <td>1882108</td>\n","      <td>206208</td>\n","      <td>prior</td>\n","      <td>49</td>\n","      <td>1</td>\n","      <td>22</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>3421068</th>\n","      <td>803273</td>\n","      <td>206208</td>\n","      <td>test</td>\n","      <td>50</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>4.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1167497 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3cf3bd5c-0261-47de-a2b3-aeae7155d536')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3cf3bd5c-0261-47de-a2b3-aeae7155d536 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3cf3bd5c-0261-47de-a2b3-aeae7155d536');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["order_df['user_id'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a3_SYvgz24jK","executionInfo":{"status":"ok","timestamp":1662617867196,"user_tz":-540,"elapsed":636,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"9058d4b1-83cb-4d10-e213-ec300aad848d"},"id":"a3_SYvgz24jK","execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["152340    99\n","185641    99\n","185524    99\n","81678     99\n","70922     99\n","          ..\n","13046      3\n","70208      3\n","111440     3\n","31762      3\n","47980      3\n","Name: user_id, Length: 206209, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["### 1만명의 유저 데이터만 추출"],"metadata":{"id":"-g1OmdzO3C8_"},"id":"-g1OmdzO3C8_"},{"cell_type":"code","source":["import random\n","random.seed(2021)\n","\n","# 1만명 추출\n","user = random.sample(order_df['user_id'][order_df['eval_set'] == 'train'].unique().tolist(), 10000)\n","\n","# 1만명의 주문 데이터에서 test-data를 별도 order2 데이터로 정함\n","orders_2 = order_df[order_df['user_id'].isin(user)]"],"metadata":{"id":"troNp6nf3ImT","executionInfo":{"status":"ok","timestamp":1662617873123,"user_tz":-540,"elapsed":517,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"troNp6nf3ImT","execution_count":11,"outputs":[]},{"cell_type":"code","source":["print('유저 인원:', len(user), \"// 주문 건수의 합:\", len(orders_2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dyjD0DzP3INR","executionInfo":{"status":"ok","timestamp":1662617873123,"user_tz":-540,"elapsed":6,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"1e5c6b8c-9fef-4a9d-f0e1-3208a5cafe38"},"id":"dyjD0DzP3INR","execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["유저 인원: 10000 // 주문 건수의 합: 155579\n"]}]},{"cell_type":"code","execution_count":13,"id":"fba06e9d","metadata":{"id":"fba06e9d","executionInfo":{"status":"ok","timestamp":1662617887228,"user_tz":-540,"elapsed":14109,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"outputs":[],"source":["# order_prior = pd.read_csv('./instacart-market-basket-analysis/order_products__prior.csv')\n","# order_train = pd.read_csv('./instacart-market-basket-analysis/order_products__train.csv')\n","order_product_prior = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/order_products__prior.csv')\n","order_product_train = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/order_products__train.csv')"]},{"cell_type":"code","source":["order_product_prior = order_product_prior[order_product_prior['order_id'].isin(orders_2['order_id'])]"],"metadata":{"id":"ZM5kZzn04Q0h","executionInfo":{"status":"ok","timestamp":1662617887229,"user_tz":-540,"elapsed":15,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"ZM5kZzn04Q0h","execution_count":14,"outputs":[]},{"cell_type":"markdown","id":"0db722b5","metadata":{"id":"0db722b5"},"source":["### 상품별 Days_since_prior_order 차이가 있는지, 분포 확인: 평균 값을 적용하여 더미 변수화 하기 (11.5일) "]},{"cell_type":"code","execution_count":15,"id":"b353d55a","metadata":{"id":"b353d55a","executionInfo":{"status":"ok","timestamp":1662617899429,"user_tz":-540,"elapsed":679,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"outputs":[],"source":["# product_df = pd.read_csv('./product_final.csv')\n","product_df = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/product_final.csv')"]},{"cell_type":"code","execution_count":16,"id":"b503acd3","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b503acd3","executionInfo":{"status":"ok","timestamp":1662617901113,"user_tz":-540,"elapsed":3,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"02fc1cd3-760e-45af-c820-47c350f4bdb6"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 49688 entries, 0 to 49687\n","Data columns (total 12 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Unnamed: 0             49688 non-null  int64  \n"," 1   product_id             49688 non-null  int64  \n"," 2   product_name           49688 non-null  object \n"," 3   aisle_id               49688 non-null  int64  \n"," 4   Category_no            49688 non-null  int64  \n"," 5   Category_name          49688 non-null  object \n"," 6   standard_price(won)    49688 non-null  int64  \n"," 7   price(won)             49688 non-null  int64  \n"," 8   Only_kurly             49688 non-null  int64  \n"," 9   discount(%)            49688 non-null  float64\n"," 10  No_of_reviews          49688 non-null  int64  \n"," 11  Monthly_Avg_Sales_Qty  49688 non-null  float64\n","dtypes: float64(2), int64(8), object(2)\n","memory usage: 4.5+ MB\n"]}],"source":["product_df.info()"]},{"cell_type":"code","execution_count":17,"id":"3d68311f","metadata":{"id":"3d68311f","executionInfo":{"status":"ok","timestamp":1662617905120,"user_tz":-540,"elapsed":483,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"outputs":[],"source":["product_df.rename(columns={'standard_price(won)':'standard_price','price(won)':'price', \n","                          'discount(%)':'discount'}, inplace=True)"]},{"cell_type":"code","execution_count":18,"id":"7364473f","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"7364473f","executionInfo":{"status":"ok","timestamp":1662617908058,"user_tz":-540,"elapsed":524,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"35dee6e4-d5e5-4a74-ba41-4d1a3b8530cc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   product_id                                       product_name  aisle_id  \\\n","0           1                         Chocolate Sandwich Cookies        61   \n","1           2                                   All-Seasons Salt       104   \n","2           3               Robust Golden Unsweetened Oolong Tea        94   \n","3           4  Smart Ones Classic Favorites Mini Rigatoni Wit...        38   \n","4           5                          Green Chile Anytime Sauce         5   \n","\n","   Category_no Category_name  standard_price  price  Only_kurly  discount  \\\n","0           19        snacks            6900   4625           1     32.97   \n","1           13        pantry           29800  27150           1      8.89   \n","2            7     beverages           16100   8927           0     44.55   \n","3            1        frozen           11000   5406           0     50.85   \n","4           13        pantry           21600  20954           0      2.99   \n","\n","   No_of_reviews  Monthly_Avg_Sales_Qty  \n","0              0                  755.9  \n","1            416                 3509.5  \n","2            173                 2906.3  \n","3             48                 4356.7  \n","4             50                 4027.8  "],"text/html":["\n","  <div id=\"df-510a1787-caff-4644-8164-f6177d19eda2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>Category_no</th>\n","      <th>Category_name</th>\n","      <th>standard_price</th>\n","      <th>price</th>\n","      <th>Only_kurly</th>\n","      <th>discount</th>\n","      <th>No_of_reviews</th>\n","      <th>Monthly_Avg_Sales_Qty</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Chocolate Sandwich Cookies</td>\n","      <td>61</td>\n","      <td>19</td>\n","      <td>snacks</td>\n","      <td>6900</td>\n","      <td>4625</td>\n","      <td>1</td>\n","      <td>32.97</td>\n","      <td>0</td>\n","      <td>755.9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>All-Seasons Salt</td>\n","      <td>104</td>\n","      <td>13</td>\n","      <td>pantry</td>\n","      <td>29800</td>\n","      <td>27150</td>\n","      <td>1</td>\n","      <td>8.89</td>\n","      <td>416</td>\n","      <td>3509.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Robust Golden Unsweetened Oolong Tea</td>\n","      <td>94</td>\n","      <td>7</td>\n","      <td>beverages</td>\n","      <td>16100</td>\n","      <td>8927</td>\n","      <td>0</td>\n","      <td>44.55</td>\n","      <td>173</td>\n","      <td>2906.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Smart Ones Classic Favorites Mini Rigatoni Wit...</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>frozen</td>\n","      <td>11000</td>\n","      <td>5406</td>\n","      <td>0</td>\n","      <td>50.85</td>\n","      <td>48</td>\n","      <td>4356.7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Green Chile Anytime Sauce</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>pantry</td>\n","      <td>21600</td>\n","      <td>20954</td>\n","      <td>0</td>\n","      <td>2.99</td>\n","      <td>50</td>\n","      <td>4027.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-510a1787-caff-4644-8164-f6177d19eda2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-510a1787-caff-4644-8164-f6177d19eda2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-510a1787-caff-4644-8164-f6177d19eda2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}],"source":["product_df.drop(\"Unnamed: 0\", axis=1, inplace=True)\n","product_df.head()"]},{"cell_type":"code","source":["product_df['aisle_id'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vu7Uh5yzBESG","executionInfo":{"status":"ok","timestamp":1662617911319,"user_tz":-540,"elapsed":475,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"e351b869-bfbe-418c-b416-a02c09af62df"},"id":"vu7Uh5yzBESG","execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["134"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","execution_count":20,"id":"e7486149","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e7486149","executionInfo":{"status":"ok","timestamp":1662617912969,"user_tz":-540,"elapsed":6,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"dd2220da-c4a1-44da-f030-0d28972c4c74"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.001114746266273719"]},"metadata":{},"execution_count":20}],"source":["# import matplotlib.pyplot as plt\n","# product_df['discount'].value_counts()\n","\n","# product_df.hist('No_of_reviews', grid=False, bins=10)\n","\n","product_df['Only_kurly'].corr(product_df['Monthly_Avg_Sales_Qty'])"]},{"cell_type":"code","execution_count":21,"id":"338ecd04","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"338ecd04","executionInfo":{"status":"ok","timestamp":1662617915153,"user_tz":-540,"elapsed":10,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"40f44cbb-9e92-4970-8e70-a2ac00d35d02"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered\n","56              6       40462                  1          0\n","57              6       15873                  2          0\n","58              6       41897                  3          0\n","566            69       43875                  1          1\n","567            69       27845                  2          1\n","...           ...         ...                ...        ...\n","1384612   3421063       14233                  3          1\n","1384613   3421063       35548                  4          1\n","1384614   3421070       35951                  1          1\n","1384615   3421070       16953                  2          1\n","1384616   3421070        4724                  3          1\n","\n","[2844704 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-638f518f-38ea-4822-93f1-43bed6b32fd8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>56</th>\n","      <td>6</td>\n","      <td>40462</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>6</td>\n","      <td>15873</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>6</td>\n","      <td>41897</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>566</th>\n","      <td>69</td>\n","      <td>43875</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>69</td>\n","      <td>27845</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1384612</th>\n","      <td>3421063</td>\n","      <td>14233</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384613</th>\n","      <td>3421063</td>\n","      <td>35548</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384614</th>\n","      <td>3421070</td>\n","      <td>35951</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384615</th>\n","      <td>3421070</td>\n","      <td>16953</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1384616</th>\n","      <td>3421070</td>\n","      <td>4724</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2844704 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-638f518f-38ea-4822-93f1-43bed6b32fd8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-638f518f-38ea-4822-93f1-43bed6b32fd8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-638f518f-38ea-4822-93f1-43bed6b32fd8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}],"source":["order_product = pd.concat([order_product_prior, order_product_train])\n","order_product"]},{"cell_type":"code","execution_count":22,"id":"9e8d0fa3","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":783},"id":"9e8d0fa3","executionInfo":{"status":"ok","timestamp":1662617918337,"user_tz":-540,"elapsed":1515,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"8f6890f6-7b93-4e05-b192-77bf4d5d367d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered  \\\n","0               6       40462                  1          0   \n","1               6       15873                  2          0   \n","2               6       41897                  3          0   \n","3              69       43875                  1          1   \n","4              69       27845                  2          1   \n","...           ...         ...                ...        ...   \n","2844699   3421063       14233                  3          1   \n","2844700   3421063       35548                  4          1   \n","2844701   3421070       35951                  1          1   \n","2844702   3421070       16953                  2          1   \n","2844703   3421070        4724                  3          1   \n","\n","                                             product_name  aisle_id  \\\n","0                                                 Cleanse        31   \n","1                             Dryer Sheets Geranium Scent        75   \n","2           Clean Day Lavender Scent Room Freshener Spray       101   \n","3        Baby Food Stage 2 Blueberry Pear & Purple Carrot        92   \n","4                                      Organic Whole Milk        84   \n","...                                                   ...       ...   \n","2844699                            Natural Artesian Water       115   \n","2844700                              Twice Baked Potatoes        13   \n","2844701                   Organic Unsweetened Almond Milk        91   \n","2844702                              Creamy Peanut Butter        88   \n","2844703                                Broccoli Florettes        32   \n","\n","         Category_no Category_name  standard_price  price  Only_kurly  \\\n","0                  7     beverages           81300  50617           0   \n","1                 17     household           17900  13491           1   \n","2                 17     household           28400  22856           0   \n","3                 18        babies           99700  65104           0   \n","4                 16    dairy eggs           25100  20391           0   \n","...              ...           ...             ...    ...         ...   \n","2844699            7     beverages           31200  28108           0   \n","2844700           20          deli           19000  12792           0   \n","2844701           16    dairy eggs           79800  53888           1   \n","2844702           13        pantry           69800  42961           0   \n","2844703            4       produce           32900  23411           1   \n","\n","         discount  No_of_reviews  Monthly_Avg_Sales_Qty  \n","0           37.74            369                 3565.2  \n","1           24.63            152                 3004.7  \n","2           19.52            442                 4372.2  \n","3           34.70             66                 2427.4  \n","4           18.76            120                 3378.4  \n","...           ...            ...                    ...  \n","2844699      9.91            437                 4590.2  \n","2844700     32.67            340                 4980.9  \n","2844701     32.47            167                 4697.7  \n","2844702     38.45            261                  128.8  \n","2844703     28.84            150                  485.1  \n","\n","[2844704 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-0307abbe-c7bc-4781-bf70-db469f73758c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>Category_no</th>\n","      <th>Category_name</th>\n","      <th>standard_price</th>\n","      <th>price</th>\n","      <th>Only_kurly</th>\n","      <th>discount</th>\n","      <th>No_of_reviews</th>\n","      <th>Monthly_Avg_Sales_Qty</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>40462</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Cleanse</td>\n","      <td>31</td>\n","      <td>7</td>\n","      <td>beverages</td>\n","      <td>81300</td>\n","      <td>50617</td>\n","      <td>0</td>\n","      <td>37.74</td>\n","      <td>369</td>\n","      <td>3565.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>15873</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Dryer Sheets Geranium Scent</td>\n","      <td>75</td>\n","      <td>17</td>\n","      <td>household</td>\n","      <td>17900</td>\n","      <td>13491</td>\n","      <td>1</td>\n","      <td>24.63</td>\n","      <td>152</td>\n","      <td>3004.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>41897</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Clean Day Lavender Scent Room Freshener Spray</td>\n","      <td>101</td>\n","      <td>17</td>\n","      <td>household</td>\n","      <td>28400</td>\n","      <td>22856</td>\n","      <td>0</td>\n","      <td>19.52</td>\n","      <td>442</td>\n","      <td>4372.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>69</td>\n","      <td>43875</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Baby Food Stage 2 Blueberry Pear &amp; Purple Carrot</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>99700</td>\n","      <td>65104</td>\n","      <td>0</td>\n","      <td>34.70</td>\n","      <td>66</td>\n","      <td>2427.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>69</td>\n","      <td>27845</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Organic Whole Milk</td>\n","      <td>84</td>\n","      <td>16</td>\n","      <td>dairy eggs</td>\n","      <td>25100</td>\n","      <td>20391</td>\n","      <td>0</td>\n","      <td>18.76</td>\n","      <td>120</td>\n","      <td>3378.4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2844699</th>\n","      <td>3421063</td>\n","      <td>14233</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>Natural Artesian Water</td>\n","      <td>115</td>\n","      <td>7</td>\n","      <td>beverages</td>\n","      <td>31200</td>\n","      <td>28108</td>\n","      <td>0</td>\n","      <td>9.91</td>\n","      <td>437</td>\n","      <td>4590.2</td>\n","    </tr>\n","    <tr>\n","      <th>2844700</th>\n","      <td>3421063</td>\n","      <td>35548</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>Twice Baked Potatoes</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>deli</td>\n","      <td>19000</td>\n","      <td>12792</td>\n","      <td>0</td>\n","      <td>32.67</td>\n","      <td>340</td>\n","      <td>4980.9</td>\n","    </tr>\n","    <tr>\n","      <th>2844701</th>\n","      <td>3421070</td>\n","      <td>35951</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Organic Unsweetened Almond Milk</td>\n","      <td>91</td>\n","      <td>16</td>\n","      <td>dairy eggs</td>\n","      <td>79800</td>\n","      <td>53888</td>\n","      <td>1</td>\n","      <td>32.47</td>\n","      <td>167</td>\n","      <td>4697.7</td>\n","    </tr>\n","    <tr>\n","      <th>2844702</th>\n","      <td>3421070</td>\n","      <td>16953</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Creamy Peanut Butter</td>\n","      <td>88</td>\n","      <td>13</td>\n","      <td>pantry</td>\n","      <td>69800</td>\n","      <td>42961</td>\n","      <td>0</td>\n","      <td>38.45</td>\n","      <td>261</td>\n","      <td>128.8</td>\n","    </tr>\n","    <tr>\n","      <th>2844703</th>\n","      <td>3421070</td>\n","      <td>4724</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>Broccoli Florettes</td>\n","      <td>32</td>\n","      <td>4</td>\n","      <td>produce</td>\n","      <td>32900</td>\n","      <td>23411</td>\n","      <td>1</td>\n","      <td>28.84</td>\n","      <td>150</td>\n","      <td>485.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2844704 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0307abbe-c7bc-4781-bf70-db469f73758c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0307abbe-c7bc-4781-bf70-db469f73758c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0307abbe-c7bc-4781-bf70-db469f73758c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}],"source":["# 주문 상세 정보\n","\n","order_detail = order_product.merge(product_df, how='left')\n","order_detail"]},{"cell_type":"code","source":["order_detail.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ufwTkNhm-yAT","executionInfo":{"status":"ok","timestamp":1662617926319,"user_tz":-540,"elapsed":498,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"b0595228-b1de-43d9-de66-daf75758120b"},"id":"ufwTkNhm-yAT","execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['order_id', 'product_id', 'add_to_cart_order', 'reordered',\n","       'product_name', 'aisle_id', 'Category_no', 'Category_name',\n","       'standard_price', 'price', 'Only_kurly', 'discount', 'No_of_reviews',\n","       'Monthly_Avg_Sales_Qty'],\n","      dtype='object')"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# RAM 에서 삭제\n","del order_df\n","del product_df\n","del order_product_prior\n","del order_product_train\n","\n","# 결측치 제거\n","orders_2.dropna()\n","order_detail.dropna()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":783},"id":"T_DV-Sx-6BjY","executionInfo":{"status":"ok","timestamp":1662617928677,"user_tz":-540,"elapsed":707,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"0480fd12-54eb-4692-bc05-a334ef75d48b"},"id":"T_DV-Sx-6BjY","execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  product_id  add_to_cart_order  reordered  \\\n","0               6       40462                  1          0   \n","1               6       15873                  2          0   \n","2               6       41897                  3          0   \n","3              69       43875                  1          1   \n","4              69       27845                  2          1   \n","...           ...         ...                ...        ...   \n","2844699   3421063       14233                  3          1   \n","2844700   3421063       35548                  4          1   \n","2844701   3421070       35951                  1          1   \n","2844702   3421070       16953                  2          1   \n","2844703   3421070        4724                  3          1   \n","\n","                                             product_name  aisle_id  \\\n","0                                                 Cleanse        31   \n","1                             Dryer Sheets Geranium Scent        75   \n","2           Clean Day Lavender Scent Room Freshener Spray       101   \n","3        Baby Food Stage 2 Blueberry Pear & Purple Carrot        92   \n","4                                      Organic Whole Milk        84   \n","...                                                   ...       ...   \n","2844699                            Natural Artesian Water       115   \n","2844700                              Twice Baked Potatoes        13   \n","2844701                   Organic Unsweetened Almond Milk        91   \n","2844702                              Creamy Peanut Butter        88   \n","2844703                                Broccoli Florettes        32   \n","\n","         Category_no Category_name  standard_price  price  Only_kurly  \\\n","0                  7     beverages           81300  50617           0   \n","1                 17     household           17900  13491           1   \n","2                 17     household           28400  22856           0   \n","3                 18        babies           99700  65104           0   \n","4                 16    dairy eggs           25100  20391           0   \n","...              ...           ...             ...    ...         ...   \n","2844699            7     beverages           31200  28108           0   \n","2844700           20          deli           19000  12792           0   \n","2844701           16    dairy eggs           79800  53888           1   \n","2844702           13        pantry           69800  42961           0   \n","2844703            4       produce           32900  23411           1   \n","\n","         discount  No_of_reviews  Monthly_Avg_Sales_Qty  \n","0           37.74            369                 3565.2  \n","1           24.63            152                 3004.7  \n","2           19.52            442                 4372.2  \n","3           34.70             66                 2427.4  \n","4           18.76            120                 3378.4  \n","...           ...            ...                    ...  \n","2844699      9.91            437                 4590.2  \n","2844700     32.67            340                 4980.9  \n","2844701     32.47            167                 4697.7  \n","2844702     38.45            261                  128.8  \n","2844703     28.84            150                  485.1  \n","\n","[2844704 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-92475bc4-c101-443e-a802-b9928feee239\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>Category_no</th>\n","      <th>Category_name</th>\n","      <th>standard_price</th>\n","      <th>price</th>\n","      <th>Only_kurly</th>\n","      <th>discount</th>\n","      <th>No_of_reviews</th>\n","      <th>Monthly_Avg_Sales_Qty</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>40462</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Cleanse</td>\n","      <td>31</td>\n","      <td>7</td>\n","      <td>beverages</td>\n","      <td>81300</td>\n","      <td>50617</td>\n","      <td>0</td>\n","      <td>37.74</td>\n","      <td>369</td>\n","      <td>3565.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>15873</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Dryer Sheets Geranium Scent</td>\n","      <td>75</td>\n","      <td>17</td>\n","      <td>household</td>\n","      <td>17900</td>\n","      <td>13491</td>\n","      <td>1</td>\n","      <td>24.63</td>\n","      <td>152</td>\n","      <td>3004.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>41897</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Clean Day Lavender Scent Room Freshener Spray</td>\n","      <td>101</td>\n","      <td>17</td>\n","      <td>household</td>\n","      <td>28400</td>\n","      <td>22856</td>\n","      <td>0</td>\n","      <td>19.52</td>\n","      <td>442</td>\n","      <td>4372.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>69</td>\n","      <td>43875</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Baby Food Stage 2 Blueberry Pear &amp; Purple Carrot</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>99700</td>\n","      <td>65104</td>\n","      <td>0</td>\n","      <td>34.70</td>\n","      <td>66</td>\n","      <td>2427.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>69</td>\n","      <td>27845</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Organic Whole Milk</td>\n","      <td>84</td>\n","      <td>16</td>\n","      <td>dairy eggs</td>\n","      <td>25100</td>\n","      <td>20391</td>\n","      <td>0</td>\n","      <td>18.76</td>\n","      <td>120</td>\n","      <td>3378.4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2844699</th>\n","      <td>3421063</td>\n","      <td>14233</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>Natural Artesian Water</td>\n","      <td>115</td>\n","      <td>7</td>\n","      <td>beverages</td>\n","      <td>31200</td>\n","      <td>28108</td>\n","      <td>0</td>\n","      <td>9.91</td>\n","      <td>437</td>\n","      <td>4590.2</td>\n","    </tr>\n","    <tr>\n","      <th>2844700</th>\n","      <td>3421063</td>\n","      <td>35548</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>Twice Baked Potatoes</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>deli</td>\n","      <td>19000</td>\n","      <td>12792</td>\n","      <td>0</td>\n","      <td>32.67</td>\n","      <td>340</td>\n","      <td>4980.9</td>\n","    </tr>\n","    <tr>\n","      <th>2844701</th>\n","      <td>3421070</td>\n","      <td>35951</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Organic Unsweetened Almond Milk</td>\n","      <td>91</td>\n","      <td>16</td>\n","      <td>dairy eggs</td>\n","      <td>79800</td>\n","      <td>53888</td>\n","      <td>1</td>\n","      <td>32.47</td>\n","      <td>167</td>\n","      <td>4697.7</td>\n","    </tr>\n","    <tr>\n","      <th>2844702</th>\n","      <td>3421070</td>\n","      <td>16953</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Creamy Peanut Butter</td>\n","      <td>88</td>\n","      <td>13</td>\n","      <td>pantry</td>\n","      <td>69800</td>\n","      <td>42961</td>\n","      <td>0</td>\n","      <td>38.45</td>\n","      <td>261</td>\n","      <td>128.8</td>\n","    </tr>\n","    <tr>\n","      <th>2844703</th>\n","      <td>3421070</td>\n","      <td>4724</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>Broccoli Florettes</td>\n","      <td>32</td>\n","      <td>4</td>\n","      <td>produce</td>\n","      <td>32900</td>\n","      <td>23411</td>\n","      <td>1</td>\n","      <td>28.84</td>\n","      <td>150</td>\n","      <td>485.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2844704 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92475bc4-c101-443e-a802-b9928feee239')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-92475bc4-c101-443e-a802-b9928feee239 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-92475bc4-c101-443e-a802-b9928feee239');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","execution_count":25,"id":"29c3f455","metadata":{"id":"29c3f455","colab":{"base_uri":"https://localhost:8080/","height":765},"executionInfo":{"status":"ok","timestamp":1662617931828,"user_tz":-540,"elapsed":769,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"5f515948-40f4-4a17-9295-2332cbdc7a85"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","0         3166874       48    prior             2          5   \n","1         3166874       48    prior             2          5   \n","2         3166874       48    prior             2          5   \n","3         3166874       48    prior             2          5   \n","4         3166874       48    prior             2          5   \n","...           ...      ...      ...           ...        ...   \n","1566105   2048154   206185    train            11          4   \n","1566106   2048154   206185    train            11          4   \n","1566107   2048154   206185    train            11          4   \n","1566108   2048154   206185    train            11          4   \n","1566109   2048154   206185    train            11          4   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","0                       13                    27.0       45007   \n","1                       13                    27.0       22613   \n","2                       13                    27.0       28842   \n","3                       13                    27.0       21405   \n","4                       13                    27.0       26209   \n","...                    ...                     ...         ...   \n","1566105                 13                    20.0       24097   \n","1566106                 13                    20.0       14852   \n","1566107                 13                    20.0       27061   \n","1566108                 13                    20.0       19627   \n","1566109                 13                    20.0        5192   \n","\n","         add_to_cart_order  reordered  \\\n","0                        1          0   \n","1                        2          0   \n","2                        3          0   \n","3                        4          0   \n","4                        5          0   \n","...                    ...        ...   \n","1566105                  7          0   \n","1566106                  8          1   \n","1566107                  9          0   \n","1566108                 10          0   \n","1566109                 11          0   \n","\n","                                    product_name  aisle_id  Category_no  \\\n","0                               Organic Zucchini        83            4   \n","1              Organic African Nectar Herbal Tea        94            7   \n","2                               Bunched Cilantro        16            4   \n","3                      Organic Red Radish, Bunch        83            4   \n","4                                          Limes        24            4   \n","...                                          ...       ...          ...   \n","1566105                             Rotini Pasta       131            9   \n","1566106               All Natural Marinara Sauce         9            9   \n","1566107     Sweet Potato Apple Stage 2 Baby Food        92           18   \n","1566108  Butternut Squash Pear Stage 2 Baby Food        92           18   \n","1566109      Vegetable Chicken Nutritious Dinner        92           18   \n","\n","           Category_name  standard_price  price  Only_kurly  discount  \\\n","0                produce           72200  53341           1     26.12   \n","1              beverages           65100  43193           1     33.65   \n","2                produce           94800  84627           0     10.73   \n","3                produce           51900  28939           0     44.24   \n","4                produce           11400   8169           1     28.34   \n","...                  ...             ...    ...         ...       ...   \n","1566105  dry goods pasta           10600   8145           0     23.16   \n","1566106  dry goods pasta           29500  22523           1     23.65   \n","1566107           babies           97500  51392           1     47.29   \n","1566108           babies           19400  15417           0     20.53   \n","1566109           babies           33100  27436           0     17.11   \n","\n","         No_of_reviews  Monthly_Avg_Sales_Qty  \n","0                   24                  681.6  \n","1                   31                   79.8  \n","2                  150                 2275.3  \n","3                  323                 4795.9  \n","4                  459                 3022.2  \n","...                ...                    ...  \n","1566105            495                 4090.8  \n","1566106            471                  691.1  \n","1566107            313                 4605.5  \n","1566108            115                 3312.6  \n","1566109            184                 1056.3  \n","\n","[1566110 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-295df8f7-088f-4a6c-8ffb-b6341c23c878\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>product_name</th>\n","      <th>aisle_id</th>\n","      <th>Category_no</th>\n","      <th>Category_name</th>\n","      <th>standard_price</th>\n","      <th>price</th>\n","      <th>Only_kurly</th>\n","      <th>discount</th>\n","      <th>No_of_reviews</th>\n","      <th>Monthly_Avg_Sales_Qty</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3166874</td>\n","      <td>48</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>27.0</td>\n","      <td>45007</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Organic Zucchini</td>\n","      <td>83</td>\n","      <td>4</td>\n","      <td>produce</td>\n","      <td>72200</td>\n","      <td>53341</td>\n","      <td>1</td>\n","      <td>26.12</td>\n","      <td>24</td>\n","      <td>681.6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3166874</td>\n","      <td>48</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>27.0</td>\n","      <td>22613</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Organic African Nectar Herbal Tea</td>\n","      <td>94</td>\n","      <td>7</td>\n","      <td>beverages</td>\n","      <td>65100</td>\n","      <td>43193</td>\n","      <td>1</td>\n","      <td>33.65</td>\n","      <td>31</td>\n","      <td>79.8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3166874</td>\n","      <td>48</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>27.0</td>\n","      <td>28842</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Bunched Cilantro</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>produce</td>\n","      <td>94800</td>\n","      <td>84627</td>\n","      <td>0</td>\n","      <td>10.73</td>\n","      <td>150</td>\n","      <td>2275.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3166874</td>\n","      <td>48</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>27.0</td>\n","      <td>21405</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>Organic Red Radish, Bunch</td>\n","      <td>83</td>\n","      <td>4</td>\n","      <td>produce</td>\n","      <td>51900</td>\n","      <td>28939</td>\n","      <td>0</td>\n","      <td>44.24</td>\n","      <td>323</td>\n","      <td>4795.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3166874</td>\n","      <td>48</td>\n","      <td>prior</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>27.0</td>\n","      <td>26209</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>Limes</td>\n","      <td>24</td>\n","      <td>4</td>\n","      <td>produce</td>\n","      <td>11400</td>\n","      <td>8169</td>\n","      <td>1</td>\n","      <td>28.34</td>\n","      <td>459</td>\n","      <td>3022.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1566105</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>24097</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>Rotini Pasta</td>\n","      <td>131</td>\n","      <td>9</td>\n","      <td>dry goods pasta</td>\n","      <td>10600</td>\n","      <td>8145</td>\n","      <td>0</td>\n","      <td>23.16</td>\n","      <td>495</td>\n","      <td>4090.8</td>\n","    </tr>\n","    <tr>\n","      <th>1566106</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>14852</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>All Natural Marinara Sauce</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>dry goods pasta</td>\n","      <td>29500</td>\n","      <td>22523</td>\n","      <td>1</td>\n","      <td>23.65</td>\n","      <td>471</td>\n","      <td>691.1</td>\n","    </tr>\n","    <tr>\n","      <th>1566107</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>27061</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>Sweet Potato Apple Stage 2 Baby Food</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>97500</td>\n","      <td>51392</td>\n","      <td>1</td>\n","      <td>47.29</td>\n","      <td>313</td>\n","      <td>4605.5</td>\n","    </tr>\n","    <tr>\n","      <th>1566108</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>19627</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>Butternut Squash Pear Stage 2 Baby Food</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>19400</td>\n","      <td>15417</td>\n","      <td>0</td>\n","      <td>20.53</td>\n","      <td>115</td>\n","      <td>3312.6</td>\n","    </tr>\n","    <tr>\n","      <th>1566109</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>5192</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>Vegetable Chicken Nutritious Dinner</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>33100</td>\n","      <td>27436</td>\n","      <td>0</td>\n","      <td>17.11</td>\n","      <td>184</td>\n","      <td>1056.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1566110 rows × 20 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-295df8f7-088f-4a6c-8ffb-b6341c23c878')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-295df8f7-088f-4a6c-8ffb-b6341c23c878 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-295df8f7-088f-4a6c-8ffb-b6341c23c878');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}],"source":["# 주문 정보와 Merge\n","\n","data = orders_2.merge(order_detail, how='left', on='order_id')\n","data"]},{"cell_type":"code","source":["# !head -n 3 /proc/meminfo"],"metadata":{"id":"JhT1R91Ozf3u","executionInfo":{"status":"ok","timestamp":1662617934756,"user_tz":-540,"elapsed":5,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"JhT1R91Ozf3u","execution_count":26,"outputs":[]},{"cell_type":"code","execution_count":27,"id":"bf45658f","metadata":{"id":"bf45658f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662617937834,"user_tz":-540,"elapsed":536,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"aad3790f-d0e5-424c-f0bd-e326ca2726a2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["27.0"]},"metadata":{},"execution_count":27}],"source":["data['days_since_prior_order'][0]"]},{"cell_type":"code","source":["data['days_since_prior_order'].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fgykvk5g_Vbd","executionInfo":{"status":"ok","timestamp":1662617939761,"user_tz":-540,"elapsed":6,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"20d3347b-655c-4ad1-aa9d-130bdcec5630"},"id":"Fgykvk5g_Vbd","execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11.455711923172702"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["purchase_alarm = []\n","for row in range(len(data)):\n","  if data['days_since_prior_order'][row] < 11.5:\n","    purchase_alarm.append(1)\n","  else:\n","    purchase_alarm.append(0)\n","\n","data['Purchase_alarm'] = purchase_alarm"],"metadata":{"id":"IzrqsZAa_pHC","executionInfo":{"status":"ok","timestamp":1662617981228,"user_tz":-540,"elapsed":18663,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"IzrqsZAa_pHC","execution_count":29,"outputs":[]},{"cell_type":"code","source":["data.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pQzMFauI_dpW","executionInfo":{"status":"ok","timestamp":1662617984671,"user_tz":-540,"elapsed":498,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"33c49f07-e8f8-413d-e3bf-eab35cae193e"},"id":"pQzMFauI_dpW","execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                  0\n","user_id                   0\n","eval_set                  0\n","order_number              0\n","order_dow                 0\n","order_hour_of_day         0\n","days_since_prior_order    0\n","product_id                0\n","add_to_cart_order         0\n","reordered                 0\n","product_name              0\n","aisle_id                  0\n","Category_no               0\n","Category_name             0\n","standard_price            0\n","price                     0\n","Only_kurly                0\n","discount                  0\n","No_of_reviews             0\n","Monthly_Avg_Sales_Qty     0\n","Purchase_alarm            0\n","dtype: int64"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["## 데이터 탐색적 분석 (EDA)\n","1. 가설 1 Rating 값 reorder 확인\n","2. 가설 2 Rating 값 purchase_alarm 확인"],"metadata":{"id":"uGUUTj5h__h9"},"id":"uGUUTj5h__h9"},{"cell_type":"code","source":["# 요일별 주문 현황\n","\n","data['order_dow'].value_counts()\n","data.hist('order_dow', grid=False, bins=7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"mDeh3sIJ_jAo","executionInfo":{"status":"ok","timestamp":1662617993846,"user_tz":-540,"elapsed":1084,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"61a57bc3-7414-40fc-f96c-00ec5f9dd435"},"id":"mDeh3sIJ_jAo","execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f7ab897add0>]],\n","      dtype=object)"]},"metadata":{},"execution_count":31},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYkAAAEICAYAAACqMQjAAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAWX0lEQVR4nO3dfbDeZZ3f8fdnAyiLDwHJMpjEDaPZbdFpg6aA445lYRaCuBt2qy60laxDjR1hq7POrNGZDusDLU5ndYdW6aJJCa5rpKgl1biYVVZrXSABWTAg5RShSRZNJDyIVij47R/3Fb05nuuck3NOzsnD+zVzz/nd39/1u67rx8P5nN/Dff9SVUiSNJZfmusJSJIOXIaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUpchIe2jJNck+eChMo40HkNCktRlSEjjSDJvBvs6Yqb6kmaLIaHDUpJ/mORvkjyaZFuS32n1a5JclWRTkh8Bv5nklCS3J/lhks8Azx3V1+uT3NH6+maSfzS07oEk705yJ/Cj8YJiEuO8NclIkj1JNiZ5cau/L8l/bMtHJvlRkv/Q3h+d5CdJjpuZf3I63BgSOuwkORL478CXgV8B/hD4VJJfb03+OXA58HzgVuC/AZ8EjgP+K/DPhvo6BVgHvA14EfDnwMYkzxka8kLgPGB+VT3dmdNRE4xzJvDvgTcBJwIPAhva6q8BZ7TlfwJ8D3hte/9q4N6q2jOZfzbSaIaEDkenA88Drqiqp6rqq8AXGPwyB7ihqv5nVf0UWAYcCfxZVf2/qroe2DLU12rgz6vqlqp6pqrWA0+2Mfa6sqq2V9X/nWBO443zL4B1VXV7VT0JvAd4dZIlwN8CS5O8iEE4rAUWJnke8E8ZhIg0JYaEDkcvBra3ENjrQWBhW94+qu3OevbXJT84tPyrwLvaqaZHkzwKLG7b7TXc33hzGm+cFw+/r6ongIeBhS18tjIIhNcyCIVvAq/BkNA0GRI6HP09sDjJ8H//LwF2tuXhX9QPMfirPKPa7rUduLyq5g+9frmqPj3UZjLfxz/ROH/PIJAASHIMg9Nbe+f8NeBM4BQGRyBfA84BTgW+PonxpTEZEjoc3QL8GPjjdqH3DOC3+fk5/mF/CzwN/JvW9vcY/OLd6+PAv05yWgaOSXJekufv45wmGufTwFuSLGvXO/4dcEtVPdDWfw24CLi7qp4C/gb4V8B3q2r3Ps5F+hlDQoed9kv0t4FzgR8AHwMuqqrvdNr+HvAHwB7g94HPDa3fCrwV+E/AI8BIazuVOY03zl8D/xb4LIOjjpcCFwx18U3gaH5+1HA38BM8itA0xSfTSZJ6PJKQJHX5CVBpliR5CYPTQGM5uar+z2zOR5oMTzdJkroOuSOJ448/vpYsWTLX05Ckg8ptt932g6paMLp+yIXEkiVL2Lp161xPQ5IOKkkeHKvuhWtJUpchIUnqMiQkSV2GhCSpy5CQJHUZEpKkLkNCktRlSEiSuiYMiSTPTXJrkr9rD4x/X6uflOSW9mD2z7Rn9JLkOe39SFu/ZKiv97T6vUnOGaqvaLWRJGuG6mOOIUmaHZP5xPWTwJlV9UR7gPw3knwJ+CPgI1W1Icl/Bi4Grmo/H6mqlyW5APgQ8PtJTmbw/fcvZ/Aoxr9O8mttjI8CvwXsALYk2VhVd7dtxxpjv1iy5ov7q+v94oErzpvrKUg6xE14JFEDT7S3R7ZXMXhU4vWtvh44vy2vbO9p689qj2RcCWyoqier6rsMHs5yanuNVNX97cErG4CVbZveGJKkWTCpaxJJ5iW5A9gFbAb+N/BoVT3dmuzg5w+RX0h78Htb/xiDZ/H+rD5qm179ReOMMXp+q5NsTbJ1926f1ChJM2VSIVFVz1TVMmARg7/8/8F+ndU+qqqrq2p5VS1fsOAXvsRQkjRF+3R3U1U9CtwEvBqYn2TvNY1FwM62vBNYDNDWvxB4eLg+apte/eFxxpAkzYLJ3N20IMn8tnw0gwvM9zAIize0ZquAG9ryxvaetv6rNXiy0Ubggnb300nAUuBWYAuwtN3JdBSDi9sb2za9MSRJs2AydzedCKxPMo9BqFxXVV9IcjewIckHgW8Ba1v7tcAnk4wAexj80qeqtiW5jsHjG58GLqmqZwCSXArcCMwD1lXVttbXuztjSJJmwYQhUVV3AqeMUb+fwfWJ0fWfAG/s9HU5cPkY9U3ApsmOIUmaHX7iWpLUZUhIkroMCUlSlyEhSeoyJCRJXYaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUpchIUnqMiQkSV2GhCSpy5CQJHVN5qFDOkAtWfPFuZ7CpD1wxXlzPQVJU+CRhCSpy5CQJHUZEpKkLkNCktRlSEiSugwJSVKXISFJ6jIkJEldhoQkqWvCkEiyOMlNSe5Osi3JO1r9T5LsTHJHe71uaJv3JBlJcm+Sc4bqK1ptJMmaofpJSW5p9c8kOarVn9Pej7T1S2Zy5yVJ45vMkcTTwLuq6mTgdOCSJCe3dR+pqmXttQmgrbsAeDmwAvhYknlJ5gEfBc4FTgYuHOrnQ62vlwGPABe3+sXAI63+kdZOkjRLJgyJqnqoqm5vyz8E7gEWjrPJSmBDVT1ZVd8FRoBT22ukqu6vqqeADcDKJAHOBK5v268Hzh/qa31bvh44q7WXJM2Cfbom0U73nALc0kqXJrkzybokx7baQmD70GY7Wq1XfxHwaFU9Par+rL7a+sda+9HzWp1ka5Ktu3fv3pddkiSNY9IhkeR5wGeBd1bV48BVwEuBZcBDwJ/ulxlOQlVdXVXLq2r5ggUL5moaknTImVRIJDmSQUB8qqo+B1BV36+qZ6rqp8DHGZxOAtgJLB7afFGr9eoPA/OTHDGq/qy+2voXtvaSpFkwmbubAqwF7qmqDw/VTxxq9rvAt9vyRuCCdmfSScBS4FZgC7C03cl0FIOL2xurqoCbgDe07VcBNwz1taotvwH4amsvSZoFk3no0GuANwN3Jbmj1d7L4O6kZUABDwBvA6iqbUmuA+5mcGfUJVX1DECSS4EbgXnAuqra1vp7N7AhyQeBbzEIJdrPTyYZAfYwCBZJ0iyZMCSq6hvAWHcUbRpnm8uBy8eobxpru6q6n5+frhqu/wR440RzlCTtH37iWpLUZUhIkroMCUlSlyEhSeoyJCRJXYaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUpchIUnqMiQkSV2GhCSpy5CQJHUZEpKkLkNCktQ1mceXStJhacmaL871FPbJA1ecN+N9eiQhSeoyJCRJXYaEJKnLkJAkdXnhWtKsOtguBh/uPJKQJHUZEpKkrglDIsniJDcluTvJtiTvaPXjkmxOcl/7eWyrJ8mVSUaS3JnklUN9rWrt70uyaqj+qiR3tW2uTJLxxpAkzY7JXJN4GnhXVd2e5PnAbUk2A38AfKWqrkiyBlgDvBs4F1jaXqcBVwGnJTkOuAxYDlTrZ2NVPdLavBW4BdgErAC+1PocawwdZA6289D740NJ0sFowiOJqnqoqm5vyz8E7gEWAiuB9a3ZeuD8trwSuLYGbgbmJzkROAfYXFV7WjBsBla0dS+oqpurqoBrR/U11hiSpFmwT9ckkiwBTmHwF/8JVfVQW/U94IS2vBDYPrTZjlYbr75jjDrjjDF6XquTbE2ydffu3fuyS5KkcUw6JJI8D/gs8M6qenx4XTsCqBme27OMN0ZVXV1Vy6tq+YIFC/bnNCTpsDKpkEhyJIOA+FRVfa6Vv99OFdF+7mr1ncDioc0Xtdp49UVj1McbQ5I0CyZzd1OAtcA9VfXhoVUbgb13KK0CbhiqX9TucjodeKydMroRODvJse0upbOBG9u6x5Oc3sa6aFRfY40hSZoFk7m76TXAm4G7ktzRau8FrgCuS3Ix8CDwprZuE/A6YAT4MfAWgKrak+QDwJbW7v1Vtactvx24BjiawV1NX2r13hiSpFkwYUhU1TeAdFafNUb7Ai7p9LUOWDdGfSvwijHqD481hiRpdviJa0lSlyEhSeoyJCRJXYaEJKnL50lIYziYvmvK75nS/uSRhCSpy5CQJHV5ukk6yB1Mp8Z08PFIQpLUZUhIkroMCUlSlyEhSeoyJCRJXYaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUpchIUnqMiQkSV2GhCSpy5CQJHUZEpKkLkNCktQ1YUgkWZdkV5JvD9X+JMnOJHe01+uG1r0nyUiSe5OcM1Rf0WojSdYM1U9KckurfybJUa3+nPZ+pK1fMlM7LUmanMkcSVwDrBij/pGqWtZemwCSnAxcALy8bfOxJPOSzAM+CpwLnAxc2NoCfKj19TLgEeDiVr8YeKTVP9LaSZJm0YQhUVVfB/ZMsr+VwIaqerKqvguMAKe210hV3V9VTwEbgJVJApwJXN+2Xw+cP9TX+rZ8PXBWay9JmiXTuSZxaZI72+moY1ttIbB9qM2OVuvVXwQ8WlVPj6o/q6+2/rHW/hckWZ1ka5Ktu3fvnsYuSZKGTTUkrgJeCiwDHgL+dMZmNAVVdXVVLa+q5QsWLJjLqUjSIWVKIVFV36+qZ6rqp8DHGZxOAtgJLB5quqjVevWHgflJjhhVf1Zfbf0LW3tJ0iyZUkgkOXHo7e8Ce+982ghc0O5MOglYCtwKbAGWtjuZjmJwcXtjVRVwE/CGtv0q4Iahvla15TcAX23tJUmz5IiJGiT5NHAGcHySHcBlwBlJlgEFPAC8DaCqtiW5DrgbeBq4pKqeaf1cCtwIzAPWVdW2NsS7gQ1JPgh8C1jb6muBTyYZYXDh/IJp760kaZ9MGBJVdeEY5bVj1Pa2vxy4fIz6JmDTGPX7+fnpquH6T4A3TjQ/SdL+4yeuJUldhoQkqcuQkCR1GRKSpC5DQpLUZUhIkroMCUlSlyEhSeoyJCRJXYaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUpchIUnqMiQkSV2GhCSpy5CQJHUZEpKkLkNCktRlSEiSugwJSVKXISFJ6jIkJEldE4ZEknVJdiX59lDtuCSbk9zXfh7b6klyZZKRJHcmeeXQNqta+/uSrBqqvyrJXW2bK5NkvDEkSbNnMkcS1wArRtXWAF+pqqXAV9p7gHOBpe21GrgKBr/wgcuA04BTgcuGfulfBbx1aLsVE4whSZolE4ZEVX0d2DOqvBJY35bXA+cP1a+tgZuB+UlOBM4BNlfVnqp6BNgMrGjrXlBVN1dVAdeO6musMSRJs2Sq1yROqKqH2vL3gBPa8kJg+1C7Ha02Xn3HGPXxxvgFSVYn2Zpk6+7du6ewO5KksUz7wnU7AqgZmMuUx6iqq6tqeVUtX7Bgwf6ciiQdVqYaEt9vp4poP3e1+k5g8VC7Ra02Xn3RGPXxxpAkzZKphsRGYO8dSquAG4bqF7W7nE4HHmunjG4Ezk5ybLtgfTZwY1v3eJLT211NF43qa6wxJEmz5IiJGiT5NHAGcHySHQzuUroCuC7JxcCDwJta803A64AR4MfAWwCqak+SDwBbWrv3V9Xei+FvZ3AH1dHAl9qLccaQJM2SCUOiqi7srDprjLYFXNLpZx2wboz6VuAVY9QfHmsMSdLs8RPXkqQuQ0KS1GVISJK6DAlJUpchIUnqMiQkSV2GhCSpy5CQJHUZEpKkLkNCktRlSEiSugwJSVKXISFJ6jIkJEldhoQkqcuQkCR1GRKSpC5DQpLUZUhIkroMCUlSlyEhSeoyJCRJXYaEJKnLkJAkdRkSkqSuaYVEkgeS3JXkjiRbW+24JJuT3Nd+HtvqSXJlkpEkdyZ55VA/q1r7+5KsGqq/qvU/0rbNdOYrSdo3M3Ek8ZtVtayqlrf3a4CvVNVS4CvtPcC5wNL2Wg1cBYNQAS4DTgNOBS7bGyytzVuHtlsxA/OVJE3S/jjdtBJY35bXA+cP1a+tgZuB+UlOBM4BNlfVnqp6BNgMrGjrXlBVN1dVAdcO9SVJmgXTDYkCvpzktiSrW+2EqnqoLX8POKEtLwS2D227o9XGq+8Yoy5JmiVHTHP736iqnUl+Bdic5DvDK6uqktQ0x5hQC6jVAC95yUv293CSdNiY1pFEVe1sP3cBn2dwTeH77VQR7eeu1nwnsHho80WtNl590Rj1seZxdVUtr6rlCxYsmM4uSZKGTDkkkhyT5Pl7l4GzgW8DG4G9dyitAm5oyxuBi9pdTqcDj7XTUjcCZyc5tl2wPhu4sa17PMnp7a6mi4b6kiTNgumcbjoB+Hy7K/UI4C+r6q+SbAGuS3Ix8CDwptZ+E/A6YAT4MfAWgKrak+QDwJbW7v1Vtactvx24Bjga+FJ7SZJmyZRDoqruB/7xGPWHgbPGqBdwSaevdcC6MepbgVdMdY6SpOnxE9eSpC5DQpLUZUhIkroMCUlSlyEhSeoyJCRJXYaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUpchIUnqMiQkSV2GhCSpy5CQJHUZEpKkLkNCktRlSEiSugwJSVKXISFJ6jIkJEldhoQkqcuQkCR1GRKSpC5DQpLUdcCHRJIVSe5NMpJkzVzPR5IOJwd0SCSZB3wUOBc4GbgwyclzOytJOnwc0CEBnAqMVNX9VfUUsAFYOcdzkqTDxhFzPYEJLAS2D73fAZw2ulGS1cDq9vaJJPdOcbzjgR9McdsDjfty4DlU9gPclwNSPjStffnVsYoHekhMSlVdDVw93X6SbK2q5TMwpTnnvhx4DpX9APflQLU/9uVAP920E1g89H5Rq0mSZsGBHhJbgKVJTkpyFHABsHGO5yRJh40D+nRTVT2d5FLgRmAesK6qtu3HIad9yuoA4r4ceA6V/QD35UA14/uSqprpPiVJh4gD/XSTJGkOGRKSpC5DojlUvv4jyboku5J8e67nMh1JFie5KcndSbYlecdcz2mqkjw3ya1J/q7ty/vmek7TkWRekm8l+cJcz2U6kjyQ5K4kdyTZOtfzmY4k85Ncn+Q7Se5J8uoZ69trEj/7+o//BfwWgw/sbQEurKq753RiU5DktcATwLVV9Yq5ns9UJTkROLGqbk/yfOA24PyD9N9JgGOq6okkRwLfAN5RVTfP8dSmJMkfAcuBF1TV6+d6PlOV5AFgeVUd9B+kS7Ie+B9V9Yl2J+gvV9WjM9G3RxIDh8zXf1TV14E9cz2P6aqqh6rq9rb8Q+AeBp/AP+jUwBPt7ZHtdVD+dZZkEXAe8Im5nosGkrwQeC2wFqCqnpqpgABDYq+xvv7joPyFdChKsgQ4Bbhlbmcyde0UzR3ALmBzVR2s+/JnwB8DP53ricyAAr6c5Lb21T4Hq5OA3cB/aacBP5HkmJnq3JDQAS3J84DPAu+sqsfnej5TVVXPVNUyBt8acGqSg+5UYJLXA7uq6ra5nssM+Y2qeiWDb5m+pJ2qPRgdAbwSuKqqTgF+BMzYdVVDYsCv/zgAtfP3nwU+VVWfm+v5zIR2GuAmYMVcz2UKXgP8TjuXvwE4M8lfzO2Upq6qdrafu4DPMzjtfDDaAewYOjq9nkFozAhDYsCv/zjAtIu9a4F7qurDcz2f6UiyIMn8tnw0gxskvjO3s9p3VfWeqlpUVUsY/D/y1ar6l3M8rSlJcky7IYJ2auZs4KC8I7CqvgdsT/LrrXQWMGM3eBzQX8sxW+bg6z/2mySfBs4Ajk+yA7isqtbO7aym5DXAm4G72rl8gPdW1aY5nNNUnQisb3fR/RJwXVUd1LePHgJOAD4/+FuEI4C/rKq/mtspTcsfAp9qf+TeD7xlpjr2FlhJUpenmyRJXYaEJKnLkJAkdRkSkqQuQ0KS1GVISJK6DAlJUtf/B2OpQae/MJDYAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 시간대별 주문 현황\n","\n","data['order_hour_of_day'].value_counts()\n","data.hist('order_hour_of_day',grid=False, bins=24)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"308qNi1tAaVW","executionInfo":{"status":"ok","timestamp":1662617996056,"user_tz":-540,"elapsed":11,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"27f5db32-aba1-47ed-e426-8876171d6eb6"},"id":"308qNi1tAaVW","execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f7ab8a19e90>]],\n","      dtype=object)"]},"metadata":{},"execution_count":32},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 재주문 여부 현황 \n","data['reordered'].value_counts()\n","data.hist('reordered',grid=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"A4tZpOcQAerF","executionInfo":{"status":"ok","timestamp":1662617998392,"user_tz":-540,"elapsed":9,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"30be1b9c-6088-4ed1-fe38-5e35fcf83c06"},"id":"A4tZpOcQAerF","execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f7ab8988fd0>]],\n","      dtype=object)"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 구매 후 지난 날 기준 구매가 필요한 것\n","data['Purchase_alarm'].value_counts()\n","data.hist('Purchase_alarm',grid=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"R9rn3jgKAnAD","executionInfo":{"status":"ok","timestamp":1662618000322,"user_tz":-540,"elapsed":5,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"c9ea5f45-f420-45a0-b062-fbb49f3e0a36"},"id":"R9rn3jgKAnAD","execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f7ab8351250>]],\n","      dtype=object)"]},"metadata":{},"execution_count":34},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### Youtube 추천 알고리즘 적용"],"metadata":{"id":"YHeru1_hA5Pu"},"id":"YHeru1_hA5Pu"},{"cell_type":"code","source":["data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"hpFH8WxTDKrg","executionInfo":{"status":"ok","timestamp":1662618008746,"user_tz":-540,"elapsed":519,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"3c5988e8-56a4-45f9-f152-cfbcb22d04bd"},"id":"hpFH8WxTDKrg","execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         order_id  user_id eval_set  order_number  order_dow  \\\n","1566105   2048154   206185    train            11          4   \n","1566106   2048154   206185    train            11          4   \n","1566107   2048154   206185    train            11          4   \n","1566108   2048154   206185    train            11          4   \n","1566109   2048154   206185    train            11          4   \n","\n","         order_hour_of_day  days_since_prior_order  product_id  \\\n","1566105                 13                    20.0       24097   \n","1566106                 13                    20.0       14852   \n","1566107                 13                    20.0       27061   \n","1566108                 13                    20.0       19627   \n","1566109                 13                    20.0        5192   \n","\n","         add_to_cart_order  reordered  ... aisle_id  Category_no  \\\n","1566105                  7          0  ...      131            9   \n","1566106                  8          1  ...        9            9   \n","1566107                  9          0  ...       92           18   \n","1566108                 10          0  ...       92           18   \n","1566109                 11          0  ...       92           18   \n","\n","           Category_name standard_price  price  Only_kurly  discount  \\\n","1566105  dry goods pasta          10600   8145           0     23.16   \n","1566106  dry goods pasta          29500  22523           1     23.65   \n","1566107           babies          97500  51392           1     47.29   \n","1566108           babies          19400  15417           0     20.53   \n","1566109           babies          33100  27436           0     17.11   \n","\n","         No_of_reviews  Monthly_Avg_Sales_Qty  Purchase_alarm  \n","1566105            495                 4090.8               0  \n","1566106            471                  691.1               0  \n","1566107            313                 4605.5               0  \n","1566108            115                 3312.6               0  \n","1566109            184                 1056.3               0  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-b7baa678-ecf5-426b-9972-cd0db9a82085\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>user_id</th>\n","      <th>eval_set</th>\n","      <th>order_number</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>days_since_prior_order</th>\n","      <th>product_id</th>\n","      <th>add_to_cart_order</th>\n","      <th>reordered</th>\n","      <th>...</th>\n","      <th>aisle_id</th>\n","      <th>Category_no</th>\n","      <th>Category_name</th>\n","      <th>standard_price</th>\n","      <th>price</th>\n","      <th>Only_kurly</th>\n","      <th>discount</th>\n","      <th>No_of_reviews</th>\n","      <th>Monthly_Avg_Sales_Qty</th>\n","      <th>Purchase_alarm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1566105</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>24097</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>131</td>\n","      <td>9</td>\n","      <td>dry goods pasta</td>\n","      <td>10600</td>\n","      <td>8145</td>\n","      <td>0</td>\n","      <td>23.16</td>\n","      <td>495</td>\n","      <td>4090.8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1566106</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>14852</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>dry goods pasta</td>\n","      <td>29500</td>\n","      <td>22523</td>\n","      <td>1</td>\n","      <td>23.65</td>\n","      <td>471</td>\n","      <td>691.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1566107</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>27061</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>97500</td>\n","      <td>51392</td>\n","      <td>1</td>\n","      <td>47.29</td>\n","      <td>313</td>\n","      <td>4605.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1566108</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>19627</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>19400</td>\n","      <td>15417</td>\n","      <td>0</td>\n","      <td>20.53</td>\n","      <td>115</td>\n","      <td>3312.6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1566109</th>\n","      <td>2048154</td>\n","      <td>206185</td>\n","      <td>train</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>20.0</td>\n","      <td>5192</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>92</td>\n","      <td>18</td>\n","      <td>babies</td>\n","      <td>33100</td>\n","      <td>27436</td>\n","      <td>0</td>\n","      <td>17.11</td>\n","      <td>184</td>\n","      <td>1056.3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7baa678-ecf5-426b-9972-cd0db9a82085')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b7baa678-ecf5-426b-9972-cd0db9a82085 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b7baa678-ecf5-426b-9972-cd0db9a82085');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["user_df = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/Member_data.csv')\n","user_df.drop('Unnamed: 0', axis=1, inplace=True)\n","user_df.rename(columns={'User_id': 'user_id'}, inplace=True)\n","user_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"uH5p1oLvDf91","executionInfo":{"status":"ok","timestamp":1662618013321,"user_tz":-540,"elapsed":1178,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"0d8a7847-cb3b-4acb-f273-66c5ddf884ce"},"id":"uH5p1oLvDf91","execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  Gender  Age  Membership  Prior_Month_Spend  aisle_id  aisle_id_2\n","0        1       1   28           2             196643        53          81\n","1        2       1   37           3             770058         2         106\n","2        3       1   45           3             995947        48          60\n","3        4       1   31           2             264114       102          84\n","4        5       1   35           5            1996585        47         115"],"text/html":["\n","  <div id=\"df-b773553a-fe89-4726-87b1-02064813fcf9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_id</th>\n","      <th>aisle_id_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>2</td>\n","      <td>196643</td>\n","      <td>53</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>770058</td>\n","      <td>2</td>\n","      <td>106</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>3</td>\n","      <td>995947</td>\n","      <td>48</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>2</td>\n","      <td>264114</td>\n","      <td>102</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>5</td>\n","      <td>1996585</td>\n","      <td>47</td>\n","      <td>115</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b773553a-fe89-4726-87b1-02064813fcf9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b773553a-fe89-4726-87b1-02064813fcf9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b773553a-fe89-4726-87b1-02064813fcf9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["### aisle_id 관심사 0도 추가하여 데이터셋 보완"],"metadata":{"id":"WnVf5l1f_wfZ"},"id":"WnVf5l1f_wfZ"},{"cell_type":"code","source":["user_df.drop(columns={'aisle_id', 'aisle_id_2'}, axis=1, inplace=True)\n","user_df['aisle_1'] = np.random.randint(0, 134, size = (206209, 1))\n","user_df['aisle_2'] = np.random.randint(0, 134, size = (206209, 1))\n","user_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"OGS9-BHT_5Oc","executionInfo":{"status":"ok","timestamp":1662618021848,"user_tz":-540,"elapsed":509,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"fa7a91e0-88eb-4329-d12e-7bdad8050854"},"id":"OGS9-BHT_5Oc","execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        user_id  Gender  Age  Membership  Prior_Month_Spend  aisle_1  aisle_2\n","0             1       1   28           2             196643       92        4\n","1             2       1   37           3             770058       30      128\n","2             3       1   45           3             995947        0      118\n","3             4       1   31           2             264114       57       84\n","4             5       1   35           5            1996585       14       83\n","...         ...     ...  ...         ...                ...      ...      ...\n","206204   206205       2   31           4            1085040       76      131\n","206205   206206       2   37           2             204148      118       83\n","206206   206207       2   47           3             669372       16       54\n","206207   206208       2   39           5            2322938        5       24\n","206208   206209       2   37           4            1480939        9       60\n","\n","[206209 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-527e6cbb-498c-497d-991f-4c659c77acf2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_1</th>\n","      <th>aisle_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>2</td>\n","      <td>196643</td>\n","      <td>92</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>770058</td>\n","      <td>30</td>\n","      <td>128</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>3</td>\n","      <td>995947</td>\n","      <td>0</td>\n","      <td>118</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>2</td>\n","      <td>264114</td>\n","      <td>57</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>5</td>\n","      <td>1996585</td>\n","      <td>14</td>\n","      <td>83</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>206204</th>\n","      <td>206205</td>\n","      <td>2</td>\n","      <td>31</td>\n","      <td>4</td>\n","      <td>1085040</td>\n","      <td>76</td>\n","      <td>131</td>\n","    </tr>\n","    <tr>\n","      <th>206205</th>\n","      <td>206206</td>\n","      <td>2</td>\n","      <td>37</td>\n","      <td>2</td>\n","      <td>204148</td>\n","      <td>118</td>\n","      <td>83</td>\n","    </tr>\n","    <tr>\n","      <th>206206</th>\n","      <td>206207</td>\n","      <td>2</td>\n","      <td>47</td>\n","      <td>3</td>\n","      <td>669372</td>\n","      <td>16</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>206207</th>\n","      <td>206208</td>\n","      <td>2</td>\n","      <td>39</td>\n","      <td>5</td>\n","      <td>2322938</td>\n","      <td>5</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>206208</th>\n","      <td>206209</td>\n","      <td>2</td>\n","      <td>37</td>\n","      <td>4</td>\n","      <td>1480939</td>\n","      <td>9</td>\n","      <td>60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>206209 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-527e6cbb-498c-497d-991f-4c659c77acf2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-527e6cbb-498c-497d-991f-4c659c77acf2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-527e6cbb-498c-497d-991f-4c659c77acf2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["user_df['aisle_1'].value_counts()\n","user_df.hist('aisle_1',grid=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"4omhYR1kweln","executionInfo":{"status":"ok","timestamp":1662618064994,"user_tz":-540,"elapsed":535,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"0392997d-3f7e-48f5-ca33-b1a301dc4310"},"id":"4omhYR1kweln","execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f7ab80a28d0>]],\n","      dtype=object)"]},"metadata":{},"execution_count":39},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["user_df.sort_values('aisle_2')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"KApZSfZpBvHp","executionInfo":{"status":"ok","timestamp":1662618070860,"user_tz":-540,"elapsed":502,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"429bc3ce-2d44-4190-ffed-90bc97bb9d38"},"id":"KApZSfZpBvHp","execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        user_id  Gender  Age  Membership  Prior_Month_Spend  aisle_1  aisle_2\n","175728   175729       2   45           3             844774       90        0\n","130484   130485       1   45           2             234877        4        0\n","3332       3333       1   30           3             862077      107        0\n","17556     17557       1   44           5            2393891       40        0\n","30912     30913       1   39           1              19780       54        0\n","...         ...     ...  ...         ...                ...      ...      ...\n","29641     29642       1   37           5            1703091        9      133\n","70187     70188       1   34           4            1253518       79      133\n","2821       2822       1   43           1              80431       63      133\n","122962   122963       1   34           4            1464200       32      133\n","160178   160179       1   44           2             182112       69      133\n","\n","[206209 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-e4c6fd66-2370-421a-bf51-62c282c641b1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_1</th>\n","      <th>aisle_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>175728</th>\n","      <td>175729</td>\n","      <td>2</td>\n","      <td>45</td>\n","      <td>3</td>\n","      <td>844774</td>\n","      <td>90</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>130484</th>\n","      <td>130485</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>2</td>\n","      <td>234877</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3332</th>\n","      <td>3333</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>3</td>\n","      <td>862077</td>\n","      <td>107</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17556</th>\n","      <td>17557</td>\n","      <td>1</td>\n","      <td>44</td>\n","      <td>5</td>\n","      <td>2393891</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>30912</th>\n","      <td>30913</td>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>19780</td>\n","      <td>54</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>29641</th>\n","      <td>29642</td>\n","      <td>1</td>\n","      <td>37</td>\n","      <td>5</td>\n","      <td>1703091</td>\n","      <td>9</td>\n","      <td>133</td>\n","    </tr>\n","    <tr>\n","      <th>70187</th>\n","      <td>70188</td>\n","      <td>1</td>\n","      <td>34</td>\n","      <td>4</td>\n","      <td>1253518</td>\n","      <td>79</td>\n","      <td>133</td>\n","    </tr>\n","    <tr>\n","      <th>2821</th>\n","      <td>2822</td>\n","      <td>1</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>80431</td>\n","      <td>63</td>\n","      <td>133</td>\n","    </tr>\n","    <tr>\n","      <th>122962</th>\n","      <td>122963</td>\n","      <td>1</td>\n","      <td>34</td>\n","      <td>4</td>\n","      <td>1464200</td>\n","      <td>32</td>\n","      <td>133</td>\n","    </tr>\n","    <tr>\n","      <th>160178</th>\n","      <td>160179</td>\n","      <td>1</td>\n","      <td>44</td>\n","      <td>2</td>\n","      <td>182112</td>\n","      <td>69</td>\n","      <td>133</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>206209 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4c6fd66-2370-421a-bf51-62c282c641b1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e4c6fd66-2370-421a-bf51-62c282c641b1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e4c6fd66-2370-421a-bf51-62c282c641b1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["user_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"I4SV1T1bCBgH","executionInfo":{"status":"ok","timestamp":1662618073395,"user_tz":-540,"elapsed":9,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"d812afda-b4c7-47a5-e968-6fb304f098cd"},"id":"I4SV1T1bCBgH","execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  Gender  Age  Membership  Prior_Month_Spend  aisle_1  aisle_2\n","0        1       1   28           2             196643       92        4\n","1        2       1   37           3             770058       30      128\n","2        3       1   45           3             995947        0      118\n","3        4       1   31           2             264114       57       84\n","4        5       1   35           5            1996585       14       83"],"text/html":["\n","  <div id=\"df-eac0f2fa-7c61-4152-a480-9e4965be5afc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_1</th>\n","      <th>aisle_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>2</td>\n","      <td>196643</td>\n","      <td>92</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>770058</td>\n","      <td>30</td>\n","      <td>128</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>3</td>\n","      <td>995947</td>\n","      <td>0</td>\n","      <td>118</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>2</td>\n","      <td>264114</td>\n","      <td>57</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>5</td>\n","      <td>1996585</td>\n","      <td>14</td>\n","      <td>83</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eac0f2fa-7c61-4152-a480-9e4965be5afc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eac0f2fa-7c61-4152-a480-9e4965be5afc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eac0f2fa-7c61-4152-a480-9e4965be5afc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["data = data.merge(user_df, how='left', on='user_id')\n","data = data.set_index(['user_id']).sort_index()\n","data = data.reset_index()"],"metadata":{"id":"V6iuJIjWEBa2","executionInfo":{"status":"ok","timestamp":1662618080299,"user_tz":-540,"elapsed":1222,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"V6iuJIjWEBa2","execution_count":42,"outputs":[]},{"cell_type":"code","source":["data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9UVH26iRCM29","executionInfo":{"status":"ok","timestamp":1662618082830,"user_tz":-540,"elapsed":833,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"ad26f7e8-f1f5-4b54-eac4-46042ff160be"},"id":"9UVH26iRCM29","execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['user_id', 'order_id', 'eval_set', 'order_number', 'order_dow',\n","       'order_hour_of_day', 'days_since_prior_order', 'product_id',\n","       'add_to_cart_order', 'reordered', 'product_name', 'aisle_id',\n","       'Category_no', 'Category_name', 'standard_price', 'price', 'Only_kurly',\n","       'discount', 'No_of_reviews', 'Monthly_Avg_Sales_Qty', 'Purchase_alarm',\n","       'Gender', 'Age', 'Membership', 'Prior_Month_Spend', 'aisle_1',\n","       'aisle_2'],\n","      dtype='object')"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# User 관심사 aisle1, aisle2로 표현\n","# data.rename(columns={'aisle_id_y': 'aisle_id_1'}, inplace=True)\n","# data.head()"],"metadata":{"id":"HFF2MYWpEskv"},"id":"HFF2MYWpEskv","execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jYNTNU_uw9JO","executionInfo":{"status":"ok","timestamp":1662618168823,"user_tz":-540,"elapsed":9,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"a794b297-6c58-4848-ef9d-a51108b5a816"},"id":"jYNTNU_uw9JO","execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1566110 entries, 0 to 1566109\n","Data columns (total 27 columns):\n"," #   Column                  Non-Null Count    Dtype  \n","---  ------                  --------------    -----  \n"," 0   user_id                 1566110 non-null  int64  \n"," 1   order_id                1566110 non-null  int64  \n"," 2   eval_set                1566110 non-null  object \n"," 3   order_number            1566110 non-null  int64  \n"," 4   order_dow               1566110 non-null  int64  \n"," 5   order_hour_of_day       1566110 non-null  int64  \n"," 6   days_since_prior_order  1566110 non-null  float64\n"," 7   product_id              1566110 non-null  int64  \n"," 8   add_to_cart_order       1566110 non-null  int64  \n"," 9   reordered               1566110 non-null  int64  \n"," 10  product_name            1566110 non-null  object \n"," 11  aisle_id                1566110 non-null  int64  \n"," 12  Category_no             1566110 non-null  int64  \n"," 13  Category_name           1566110 non-null  object \n"," 14  standard_price          1566110 non-null  int64  \n"," 15  price                   1566110 non-null  int64  \n"," 16  Only_kurly              1566110 non-null  int64  \n"," 17  discount                1566110 non-null  float64\n"," 18  No_of_reviews           1566110 non-null  int64  \n"," 19  Monthly_Avg_Sales_Qty   1566110 non-null  float64\n"," 20  Purchase_alarm          1566110 non-null  int64  \n"," 21  Gender                  1566110 non-null  int64  \n"," 22  Age                     1566110 non-null  int64  \n"," 23  Membership              1566110 non-null  int64  \n"," 24  Prior_Month_Spend       1566110 non-null  int64  \n"," 25  aisle_1                 1566110 non-null  int64  \n"," 26  aisle_2                 1566110 non-null  int64  \n","dtypes: float64(3), int64(21), object(3)\n","memory usage: 322.6+ MB\n"]}]},{"cell_type":"code","source":["# 정수값으로 인코딩\n","\n","data['user_id'] = data['user_id'].astype(int)\n","data['product_id'] = data['product_id'].astype(int)\n","data['order_id'] = data['order_id'].astype(int)\n","data['days_since_prior_order'] = data['days_since_prior_order'].astype(int)"],"metadata":{"id":"1FxtWbCjAy_c","executionInfo":{"status":"ok","timestamp":1662618188133,"user_tz":-540,"elapsed":506,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"1FxtWbCjAy_c","execution_count":45,"outputs":[]},{"cell_type":"code","source":["# 유저 인덱스 인코딩\n","user_ids = data[\"user_id\"].unique().tolist()\n","user2user_encoded = {x: i for i, x in enumerate(user_ids)}\n","#userencoded2user = {i: x for i, x in enumerate(user_ids)}\n","\n","# 주문 인덱스 인코딩\n","order_ids = data[\"order_id\"].unique().tolist()\n","order2order_encoded = {x: i for i, x in enumerate(order_ids)}\n","#order_encoded2order = {i: x for i, x in enumerate(order_ids)}\n","\n","# 상품 인덱스 인코딩\n","product_ids = data[\"product_id\"].unique().tolist()\n","product2product_encoded = {x: i for i, x in enumerate(product_ids)}\n","#product_encoded2product = {i: x for i, x in enumerate(product_ids)}\n","\n","# 상품 이름 인코딩\n","pd_name_ids = data[\"product_name\"].unique().tolist()\n","pd_name2pd_name_encoded = {x: i for i, x in enumerate(pd_name_ids)}\n","#pd_name_encoded2pd_name = {i: x for i, x in enumerate(pd_name_ids)}\n","\n","# 상품 대분류 인덱스 인코딩\n","department_ids = data[\"Category_no\"].unique().tolist()\n","department2department_encoded = {x: i for i, x in enumerate(department_ids)}\n","#department_encoded2department = {i: x for i, x in enumerate(department_ids)}\n","\n","# 상품 소분류 인덱스 인코딩\n","aisle_ids = data[\"aisle_id\"].unique().tolist()\n","aisle2aisle_encoded = {x: i for i, x in enumerate(aisle_ids)}\n","#aisle_encoded2aisle = {i: x for i, x in enumerate(aisle_ids)}\n","\n","# 상품 대분류명 인덱스 인코딩\n","dept_name_ids = data[\"Category_name\"].unique().tolist()\n","dept_name2dept_name_encoded = {x: i for i, x in enumerate(dept_name_ids)}\n","#dept_name_encoded2dept_name = {i: x for i, x in enumerate(dept_name_ids)}\n","\n","# # 상품 소분류명 인덱스 인코딩\n","# aisle_name_ids = data[\"aisle\"].unique().tolist()\n","# aisle_name2aisle_name_encoded = {x: i for i, x in enumerate(aisle_name_ids)}\n","# #aisle_name_encoded2aisle_name = {i: x for i, x in enumerate(aisle_name_ids)}\n","\n","# 인코딩으로 바꾸기\n","data[\"user\"] = data[\"user_id\"].map(user2user_encoded)\n","data[\"product\"] = data[\"product_id\"].map(product2product_encoded)\n","data[\"order\"] = data[\"order_id\"].map(order2order_encoded)\n","data[\"pd_name\"] = data[\"product_name\"].map(pd_name2pd_name_encoded)"],"metadata":{"id":"Bz1b-EeUBIFF","executionInfo":{"status":"ok","timestamp":1662618215495,"user_tz":-540,"elapsed":1668,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"Bz1b-EeUBIFF","execution_count":46,"outputs":[]},{"cell_type":"markdown","source":["##**User 기준 Feature Engineering**"],"metadata":{"id":"ba-zyyksGT_D"},"id":"ba-zyyksGT_D"},{"cell_type":"code","source":["order_hist = data.groupby(['user'])['order_id'].unique().apply(list).reset_index()\n","product_hist = data.groupby(['user'])['product_id'].apply(list).reset_index()\n","order_dow_hist = data.groupby(['user'])['order_dow'].apply(list).reset_index() # unique().적용해보기\n","order_hour_of_day_hist = data.groupby(['user'])['order_hour_of_day'].apply(list).reset_index()\n","days_since_prior_order_hist = data.groupby(['user'])['days_since_prior_order'].apply(list).reset_index()"],"metadata":{"id":"LUHWoQlqFkk6","executionInfo":{"status":"ok","timestamp":1662618226468,"user_tz":-540,"elapsed":2209,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"LUHWoQlqFkk6","execution_count":47,"outputs":[]},{"cell_type":"code","source":["order_product_hist = data.groupby(['order'])['product_id'].apply(list).reset_index()"],"metadata":{"id":"rn2Q7SZeGilA","executionInfo":{"status":"ok","timestamp":1662618230625,"user_tz":-540,"elapsed":2534,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"rn2Q7SZeGilA","execution_count":48,"outputs":[]},{"cell_type":"code","source":["order_hist # 사용자 주문 목록"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"JBKlOW7AGsOQ","executionInfo":{"status":"ok","timestamp":1662618230626,"user_tz":-540,"elapsed":15,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"086f1048-a893-487e-a26d-44f0a8a8e6aa"},"id":"JBKlOW7AGsOQ","execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      user                                           order_id\n","0        0  [3166874, 2766710, 501067, 1643524, 1657641, 7...\n","1        1  [1318871, 1261384, 2100631, 580568, 1680554, 2...\n","2        2  [964058, 2163945, 3349827, 1376443, 2655621, 1...\n","3        3  [2568280, 1763414, 3092533, 414538, 1538989, 3...\n","4        4  [251784, 3211781, 1469604, 1515062, 1342998, 2...\n","...    ...                                                ...\n","9995  9995  [1911923, 549547, 3130715, 2582484, 1258873, 2...\n","9996  9996  [992039, 2551929, 1053779, 2760916, 1877978, 1...\n","9997  9997          [2822394, 83431, 56199, 1597643, 1782820]\n","9998  9998  [3115357, 1209728, 164466, 3304125, 1983173, 1...\n","9999  9999  [2275747, 1597200, 497488, 1874713, 1286942, 1...\n","\n","[10000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-82cc52ba-abc6-4505-b10e-aca176d82af2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>order_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>[1318871, 1261384, 2100631, 580568, 1680554, 2...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>[964058, 2163945, 3349827, 1376443, 2655621, 1...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>[2568280, 1763414, 3092533, 414538, 1538989, 3...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>[251784, 3211781, 1469604, 1515062, 1342998, 2...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>9995</td>\n","      <td>[1911923, 549547, 3130715, 2582484, 1258873, 2...</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>9996</td>\n","      <td>[992039, 2551929, 1053779, 2760916, 1877978, 1...</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>9997</td>\n","      <td>[2822394, 83431, 56199, 1597643, 1782820]</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>9998</td>\n","      <td>[3115357, 1209728, 164466, 3304125, 1983173, 1...</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>9999</td>\n","      <td>[2275747, 1597200, 497488, 1874713, 1286942, 1...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82cc52ba-abc6-4505-b10e-aca176d82af2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-82cc52ba-abc6-4505-b10e-aca176d82af2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-82cc52ba-abc6-4505-b10e-aca176d82af2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["max([x for x in order_hist['order_id'].apply(len)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ckCCZektGwAx","executionInfo":{"status":"ok","timestamp":1662618232358,"user_tz":-540,"elapsed":6,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"0e365f2f-cd95-4d63-d5e4-781d8db26452"},"id":"ckCCZektGwAx","execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["99"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["# 사용자 구매목록\n","product_hist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"TvKCWH3YHC5G","executionInfo":{"status":"ok","timestamp":1662618244266,"user_tz":-540,"elapsed":504,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"be47ebde-227a-47e3-ce9c-4dcccf869be4"},"id":"TvKCWH3YHC5G","execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      user                                         product_id\n","0        0  [45007, 22613, 28842, 21405, 26209, 19508, 248...\n","1        1  [12341, 6184, 10441, 46149, 196, 14309, 46149,...\n","2        2  [49075, 39121, 21724, 48017, 36695, 28289, 391...\n","3        3  [34213, 34574, 7029, 25305, 41950, 31338, 4235...\n","4        4  [2186, 42699, 25753, 46496, 42139, 24157, 2415...\n","...    ...                                                ...\n","9995  9995  [20512, 18918, 17948, 24489, 13176, 19057, 817...\n","9996  9996  [12099, 40706, 43129, 48119, 8523, 7192, 35761...\n","9997  9997  [24852, 24710, 27307, 32642, 20919, 12508, 267...\n","9998  9998  [23650, 26165, 11087, 48775, 36305, 47977, 428...\n","9999  9999  [30217, 35473, 25915, 14852, 15829, 24613, 399...\n","\n","[10000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-334edc25-657b-4c1d-a866-5db264cd018e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>product_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>[12341, 6184, 10441, 46149, 196, 14309, 46149,...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>[49075, 39121, 21724, 48017, 36695, 28289, 391...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>[34213, 34574, 7029, 25305, 41950, 31338, 4235...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>[2186, 42699, 25753, 46496, 42139, 24157, 2415...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>9995</td>\n","      <td>[20512, 18918, 17948, 24489, 13176, 19057, 817...</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>9996</td>\n","      <td>[12099, 40706, 43129, 48119, 8523, 7192, 35761...</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>9997</td>\n","      <td>[24852, 24710, 27307, 32642, 20919, 12508, 267...</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>9998</td>\n","      <td>[23650, 26165, 11087, 48775, 36305, 47977, 428...</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>9999</td>\n","      <td>[30217, 35473, 25915, 14852, 15829, 24613, 399...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-334edc25-657b-4c1d-a866-5db264cd018e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-334edc25-657b-4c1d-a866-5db264cd018e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-334edc25-657b-4c1d-a866-5db264cd018e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# 주문 당 가장 많은 제품을 구입한 경우\n","max([x for x in order_product_hist['product_id'].apply(len)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pbpUDDgCHIQs","executionInfo":{"status":"ok","timestamp":1662618246773,"user_tz":-540,"elapsed":517,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"080b674a-e140-402a-e3a1-5841b48d994a"},"id":"pbpUDDgCHIQs","execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["145"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["Purchase_alarm_hist = data.groupby(['user'])['Purchase_alarm'].apply(list).reset_index()\n","gender_hist = data.groupby(['user'])['Gender'].apply(list).reset_index()\n","age_hist = data.groupby(['user'])['Age'].apply(list).reset_index() # unique().적용해보기\n","membership_hist = data.groupby(['user'])['Membership'].apply(list).reset_index()\n","prior_month_spend_hist = data.groupby(['user'])['Prior_Month_Spend'].apply(list).reset_index()\n","aisle1_hist = data.groupby(['user'])['aisle_1'].apply(list).reset_index()\n","aisle12_hist = data.groupby(['user'])['aisle_2'].apply(list).reset_index()"],"metadata":{"id":"WwJHfZgNHnNB","executionInfo":{"status":"ok","timestamp":1662618464439,"user_tz":-540,"elapsed":3356,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"WwJHfZgNHnNB","execution_count":54,"outputs":[]},{"cell_type":"code","source":["# User dataset 생성 (학습에 사용할 데이터, prior order:[data['eval_set']=='prior']) #eval_set\n","user_data = data[['user','user_id']].merge(gender_hist,how='left').merge(age_hist,how='left').merge(membership_hist,how='left').merge(prior_month_spend_hist,how='left').merge(aisle1_hist,how='left').merge(aisle12_hist,how='left').merge(days_since_prior_order_hist,how='left').merge(order_hist, how='left').merge(product_hist, how='left').merge(order_dow_hist, how='left').merge(order_hour_of_day_hist, how = 'left').merge(Purchase_alarm_hist, how='left')\n","user_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"5XjYAnB-HMc6","executionInfo":{"status":"ok","timestamp":1662618469810,"user_tz":-540,"elapsed":3040,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"d6fbc445-eeca-4100-f5f1-a4b383ce47d2"},"id":"5XjYAnB-HMc6","execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         user  user_id                                             Gender  \\\n","0           0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","1           0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","2           0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","3           0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","4           0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","...       ...      ...                                                ...   \n","1566105  9999   206185  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","1566106  9999   206185  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","1566107  9999   206185  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","1566108  9999   206185  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","1566109  9999   206185  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","\n","                                                       Age  \\\n","0        [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","1        [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","2        [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","3        [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","4        [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","...                                                    ...   \n","1566105  [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...   \n","1566106  [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...   \n","1566107  [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...   \n","1566108  [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...   \n","1566109  [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...   \n","\n","                                                Membership  \\\n","0        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","1        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","2        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","3        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","4        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","...                                                    ...   \n","1566105  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","1566106  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","1566107  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","1566108  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","1566109  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","\n","                                         Prior_Month_Spend  \\\n","0        [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","1        [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","2        [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","3        [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","4        [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","...                                                    ...   \n","1566105  [1420829, 1420829, 1420829, 1420829, 1420829, ...   \n","1566106  [1420829, 1420829, 1420829, 1420829, 1420829, ...   \n","1566107  [1420829, 1420829, 1420829, 1420829, 1420829, ...   \n","1566108  [1420829, 1420829, 1420829, 1420829, 1420829, ...   \n","1566109  [1420829, 1420829, 1420829, 1420829, 1420829, ...   \n","\n","                                                   aisle_1  \\\n","0        [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","1        [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","2        [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","3        [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","4        [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","...                                                    ...   \n","1566105  [99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...   \n","1566106  [99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...   \n","1566107  [99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...   \n","1566108  [99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...   \n","1566109  [99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...   \n","\n","                                                   aisle_2  \\\n","0        [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","1        [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","2        [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","3        [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","4        [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","...                                                    ...   \n","1566105  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...   \n","1566106  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...   \n","1566107  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...   \n","1566108  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...   \n","1566109  [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...   \n","\n","                                    days_since_prior_order  \\\n","0        [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","1        [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","2        [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","3        [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","4        [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","...                                                    ...   \n","1566105  [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...   \n","1566106  [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...   \n","1566107  [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...   \n","1566108  [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...   \n","1566109  [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...   \n","\n","                                                  order_id  \\\n","0        [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","1        [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","2        [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","3        [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","4        [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","...                                                    ...   \n","1566105  [2275747, 1597200, 497488, 1874713, 1286942, 1...   \n","1566106  [2275747, 1597200, 497488, 1874713, 1286942, 1...   \n","1566107  [2275747, 1597200, 497488, 1874713, 1286942, 1...   \n","1566108  [2275747, 1597200, 497488, 1874713, 1286942, 1...   \n","1566109  [2275747, 1597200, 497488, 1874713, 1286942, 1...   \n","\n","                                                product_id  \\\n","0        [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","1        [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","2        [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","3        [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","4        [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","...                                                    ...   \n","1566105  [30217, 35473, 25915, 14852, 15829, 24613, 399...   \n","1566106  [30217, 35473, 25915, 14852, 15829, 24613, 399...   \n","1566107  [30217, 35473, 25915, 14852, 15829, 24613, 399...   \n","1566108  [30217, 35473, 25915, 14852, 15829, 24613, 399...   \n","1566109  [30217, 35473, 25915, 14852, 15829, 24613, 399...   \n","\n","                                                 order_dow  \\\n","0        [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","1        [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","2        [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","3        [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","4        [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","...                                                    ...   \n","1566105  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","1566106  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","1566107  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","1566108  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","1566109  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","\n","                                         order_hour_of_day  \\\n","0        [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","1        [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","2        [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","3        [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","4        [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","...                                                    ...   \n","1566105  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...   \n","1566106  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...   \n","1566107  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...   \n","1566108  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...   \n","1566109  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...   \n","\n","                                            Purchase_alarm  \n","0        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","1        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","2        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","3        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","4        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","...                                                    ...  \n","1566105  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","1566106  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","1566107  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","1566108  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","1566109  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","\n","[1566110 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-57d12c96-7b9f-4229-8825-d9ce2aba17ef\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_1</th>\n","      <th>aisle_2</th>\n","      <th>days_since_prior_order</th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>Purchase_alarm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1566105</th>\n","      <td>9999</td>\n","      <td>206185</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1420829, 1420829, 1420829, 1420829, 1420829, ...</td>\n","      <td>[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...</td>\n","      <td>[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...</td>\n","      <td>[26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...</td>\n","      <td>[2275747, 1597200, 497488, 1874713, 1286942, 1...</td>\n","      <td>[30217, 35473, 25915, 14852, 15829, 24613, 399...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1566106</th>\n","      <td>9999</td>\n","      <td>206185</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1420829, 1420829, 1420829, 1420829, 1420829, ...</td>\n","      <td>[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...</td>\n","      <td>[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...</td>\n","      <td>[26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...</td>\n","      <td>[2275747, 1597200, 497488, 1874713, 1286942, 1...</td>\n","      <td>[30217, 35473, 25915, 14852, 15829, 24613, 399...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1566107</th>\n","      <td>9999</td>\n","      <td>206185</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1420829, 1420829, 1420829, 1420829, 1420829, ...</td>\n","      <td>[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...</td>\n","      <td>[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...</td>\n","      <td>[26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...</td>\n","      <td>[2275747, 1597200, 497488, 1874713, 1286942, 1...</td>\n","      <td>[30217, 35473, 25915, 14852, 15829, 24613, 399...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1566108</th>\n","      <td>9999</td>\n","      <td>206185</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1420829, 1420829, 1420829, 1420829, 1420829, ...</td>\n","      <td>[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...</td>\n","      <td>[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...</td>\n","      <td>[26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...</td>\n","      <td>[2275747, 1597200, 497488, 1874713, 1286942, 1...</td>\n","      <td>[30217, 35473, 25915, 14852, 15829, 24613, 399...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1566109</th>\n","      <td>9999</td>\n","      <td>206185</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1420829, 1420829, 1420829, 1420829, 1420829, ...</td>\n","      <td>[99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 9...</td>\n","      <td>[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1...</td>\n","      <td>[26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 3...</td>\n","      <td>[2275747, 1597200, 497488, 1874713, 1286942, 1...</td>\n","      <td>[30217, 35473, 25915, 14852, 15829, 24613, 399...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, ...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1566110 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57d12c96-7b9f-4229-8825-d9ce2aba17ef')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-57d12c96-7b9f-4229-8825-d9ce2aba17ef button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-57d12c96-7b9f-4229-8825-d9ce2aba17ef');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["user_data = user_data.drop_duplicates('user') # 중복데이터 삭제\n","print(user_data.shape)\n","data_product_prior=data['product'][data['eval_set']=='prior']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4VAxpOVHUa5","executionInfo":{"status":"ok","timestamp":1662618481886,"user_tz":-540,"elapsed":1013,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"58f2f467-a26d-4b34-cb4e-e35007f834eb"},"id":"p4VAxpOVHUa5","execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["(10000, 14)\n"]}]},{"cell_type":"markdown","source":["### Predict_label 생성 및 데이터 분할\n","- user_id 별 product_id에서 랜덤으로 라벨 부여\n"],"metadata":{"id":"dpRfkQepIPXh"},"id":"dpRfkQepIPXh"},{"cell_type":"code","source":["a = random.choice(user_data.product_id[0])\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oU_qEyPoM4Yf","executionInfo":{"status":"ok","timestamp":1662619444495,"user_tz":-540,"elapsed":1262,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"2a57f8a8-848c-40f2-c23a-b14971e9871d"},"id":"oU_qEyPoM4Yf","execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["45007"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["type(user_data['product_id'][0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QAB7zbocNaRA","executionInfo":{"status":"ok","timestamp":1662618492319,"user_tz":-540,"elapsed":5,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"9bd0e4cd-e81e-47cd-e38a-e380a0df8170"},"id":"QAB7zbocNaRA","execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["list"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["tmp = user_data['product_id']\n","len(tmp[0])\n","# len(tmp)\n","# type(tmp[0])\n","type(tmp[0][0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VPZA0tTEOBqR","executionInfo":{"status":"ok","timestamp":1662618974954,"user_tz":-540,"elapsed":3,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"f1847be9-106f-4990-b8fc-42a563388ace"},"id":"VPZA0tTEOBqR","execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["# 예시 코드 : 상품코드 row의 max 값을 랜덤으로 라벨로 부여\n","# user_data['predict_labels'] = user_data['product_id'].apply(lambda x: int(random.uniform(0,data['product_id'].max())))\n","\n","\n","# 유저별 predict label 할당\n","labels = []\n","\n","for row in tmp:\n","    label = random.choice(row)\n","    labels.append(label)\n","\n","user_data['predict_label'] = labels\n","user_data.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"EumQRvozHm8S","executionInfo":{"status":"ok","timestamp":1662619577283,"user_tz":-540,"elapsed":7,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"a2e7b933-cc0d-4fe9-9e44-e113c2638528"},"id":"EumQRvozHm8S","execution_count":83,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  # Remove the CWD from sys.path while we load stuff.\n"]},{"output_type":"execute_result","data":{"text/plain":["     user  user_id                                             Gender  \\\n","0       0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","124     1       52  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","298     2       62  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","393     3       63  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","895     4       83  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","\n","                                                   Age  \\\n","0    [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","124  [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...   \n","298  [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...   \n","393  [34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 3...   \n","895  [41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4...   \n","\n","                                            Membership  \\\n","0    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","124  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","298  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","393  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","895  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...   \n","\n","                                     Prior_Month_Spend  \\\n","0    [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","124  [599947, 599947, 599947, 599947, 599947, 59994...   \n","298  [496729, 496729, 496729, 496729, 496729, 49672...   \n","393  [289597, 289597, 289597, 289597, 289597, 28959...   \n","895  [152758, 152758, 152758, 152758, 152758, 15275...   \n","\n","                                               aisle_1  \\\n","0    [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","124  [96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 9...   \n","298  [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","393  [122, 122, 122, 122, 122, 122, 122, 122, 122, ...   \n","895  [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 2...   \n","\n","                                               aisle_2  \\\n","0    [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","124  [52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 5...   \n","298  [73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 7...   \n","393  [120, 120, 120, 120, 120, 120, 120, 120, 120, ...   \n","895  [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 5...   \n","\n","                                days_since_prior_order  \\\n","0    [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","124  [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, ...   \n","298  [10, 10, 10, 10, 10, 10, 30, 30, 30, 30, 30, 3...   \n","393  [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1...   \n","895  [8, 8, 8, 30, 30, 30, 20, 20, 20, 20, 20, 20, ...   \n","\n","                                              order_id  \\\n","0    [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","124  [1318871, 1261384, 2100631, 580568, 1680554, 2...   \n","298  [964058, 2163945, 3349827, 1376443, 2655621, 1...   \n","393  [2568280, 1763414, 3092533, 414538, 1538989, 3...   \n","895  [251784, 3211781, 1469604, 1515062, 1342998, 2...   \n","\n","                                            product_id  \\\n","0    [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","124  [12341, 6184, 10441, 46149, 196, 14309, 46149,...   \n","298  [49075, 39121, 21724, 48017, 36695, 28289, 391...   \n","393  [34213, 34574, 7029, 25305, 41950, 31338, 4235...   \n","895  [2186, 42699, 25753, 46496, 42139, 24157, 2415...   \n","\n","                                             order_dow  \\\n","0    [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","124  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","298  [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, ...   \n","393  [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, ...   \n","895  [4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","\n","                                     order_hour_of_day  \\\n","0    [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","124  [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...   \n","298  [10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 1...   \n","393  [9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 14, 14, 14, 14...   \n","895  [14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 1...   \n","\n","                                        Purchase_alarm  predict_label  \n","0    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...          29941  \n","124  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...           6184  \n","298  [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...          30233  \n","393  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...          24964  \n","895  [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...          20600  "],"text/html":["\n","  <div id=\"df-3f72e002-7ac6-4184-8834-fc412cc7cb6b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_1</th>\n","      <th>aisle_2</th>\n","      <th>days_since_prior_order</th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>Purchase_alarm</th>\n","      <th>predict_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","      <td>29941</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>1</td>\n","      <td>52</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[599947, 599947, 599947, 599947, 599947, 59994...</td>\n","      <td>[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 9...</td>\n","      <td>[52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 5...</td>\n","      <td>[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, ...</td>\n","      <td>[1318871, 1261384, 2100631, 580568, 1680554, 2...</td>\n","      <td>[12341, 6184, 10441, 46149, 196, 14309, 46149,...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>6184</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>2</td>\n","      <td>62</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[496729, 496729, 496729, 496729, 496729, 49672...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 7...</td>\n","      <td>[10, 10, 10, 10, 10, 10, 30, 30, 30, 30, 30, 3...</td>\n","      <td>[964058, 2163945, 3349827, 1376443, 2655621, 1...</td>\n","      <td>[49075, 39121, 21724, 48017, 36695, 28289, 391...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, ...</td>\n","      <td>[10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 1...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","      <td>30233</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>3</td>\n","      <td>63</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 3...</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[289597, 289597, 289597, 289597, 289597, 28959...</td>\n","      <td>[122, 122, 122, 122, 122, 122, 122, 122, 122, ...</td>\n","      <td>[120, 120, 120, 120, 120, 120, 120, 120, 120, ...</td>\n","      <td>[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1...</td>\n","      <td>[2568280, 1763414, 3092533, 414538, 1538989, 3...</td>\n","      <td>[34213, 34574, 7029, 25305, 41950, 31338, 4235...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 14, 14, 14, 14...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>24964</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>4</td>\n","      <td>83</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 4...</td>\n","      <td>[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...</td>\n","      <td>[152758, 152758, 152758, 152758, 152758, 15275...</td>\n","      <td>[20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 2...</td>\n","      <td>[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 5...</td>\n","      <td>[8, 8, 8, 30, 30, 30, 20, 20, 20, 20, 20, 20, ...</td>\n","      <td>[251784, 3211781, 1469604, 1515062, 1342998, 2...</td>\n","      <td>[2186, 42699, 25753, 46496, 42139, 24157, 2415...</td>\n","      <td>[4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[14, 14, 14, 14, 14, 14, 18, 18, 18, 18, 18, 1...</td>\n","      <td>[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","      <td>20600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f72e002-7ac6-4184-8834-fc412cc7cb6b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3f72e002-7ac6-4184-8834-fc412cc7cb6b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3f72e002-7ac6-4184-8834-fc412cc7cb6b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["# 학습, 테스트 데이터 split\n","\n","train_data = user_data[user_data.user<=49]\n","test_data = user_data[(user_data.user>=50) &\n","                      (user_data.user<=99)]"],"metadata":{"id":"frg5T6UVKuEh","executionInfo":{"status":"ok","timestamp":1662619624072,"user_tz":-540,"elapsed":495,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"frg5T6UVKuEh","execution_count":84,"outputs":[]},{"cell_type":"markdown","source":["### 순서 1. 후보모델(candidate generator model) : 추천 상품 후보 리스트 뽑기"],"metadata":{"id":"FJk336gILV6m"},"id":"FJk336gILV6m"},{"cell_type":"code","source":["data[\"product\"].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XdXHwHhDLK7V","executionInfo":{"status":"ok","timestamp":1662619660244,"user_tz":-540,"elapsed":501,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"87682685-c3cc-4175-bfbe-b555727c9fe6"},"id":"XdXHwHhDLK7V","execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["35053"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["len(data['user_id'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8WrZMSXE2rjC","executionInfo":{"status":"ok","timestamp":1662619678254,"user_tz":-540,"elapsed":491,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"b8cbc981-15bf-4a2b-8b9d-dd74d1290522"},"id":"8WrZMSXE2rjC","execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1566110"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["# 하이퍼파라미터 정의\n","\n","EMBEDDING_DIMS = 16\n","DENSE_UNITS = 64\n","DROPOUT_PCT = 0.1\n","ALPHA = 0.1\n","NUM_CLASSES = data[\"product_id\"].max() + 2 \n","# LEARNING_RATE = 0.1\n","LEARNING_RATE = 0.05"],"metadata":{"id":"Q9B8mKyWL229","executionInfo":{"status":"ok","timestamp":1662620800842,"user_tz":-540,"elapsed":9,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"Q9B8mKyWL229","execution_count":99,"outputs":[]},{"cell_type":"code","source":["# custom layers\n","\n","import tensorflow as tf\n","class MaskedEmbeddingsAggregatorLayer(tf.keras.layers.Layer):\n","    def __init__(self, agg_mode='sum', **kwargs):\n","        super(MaskedEmbeddingsAggregatorLayer, self).__init__(**kwargs)\n","\n","        if agg_mode not in ['sum', 'mean']:\n","            raise NotImplementedError('mode {} not implemented!'.format(agg_mode))\n","        self.agg_mode = agg_mode\n","    \n","    @tf.function\n","    def call(self, inputs, mask=None):\n","        masked_embeddings = tf.ragged.boolean_mask(inputs, mask)\n","        if self.agg_mode == 'sum':\n","            aggregated =  tf.reduce_sum(masked_embeddings, axis=1)\n","        elif self.agg_mode == 'mean':\n","            aggregated = tf.reduce_mean(masked_embeddings, axis=1)\n","        return aggregated\n","    \n","    def get_config(self):\n","        # this is used when loading a saved model that uses a custom layer\n","        return {'agg_mode': self.agg_mode}\n","    \n","class L2NormLayer(tf.keras.layers.Layer):\n","    def __init__(self, **kwargs):\n","        super(L2NormLayer, self).__init__(**kwargs)\n","    \n","    @tf.function\n","    def call(self, inputs, mask=None):\n","        if mask is not None:\n","            inputs = tf.ragged.boolean_mask(inputs, mask).to_tensor()\n","        return tf.math.l2_normalize(inputs, axis=-1)\n","\n","    def compute_mask(self, inputs, mask):\n","        return mask"],"metadata":{"id":"ON4GeUKCL6LC","executionInfo":{"status":"ok","timestamp":1662620803314,"user_tz":-540,"elapsed":4,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"ON4GeUKCL6LC","execution_count":100,"outputs":[]},{"cell_type":"code","source":["# modeling\n","import tensorflow as tf\n","import datetime\n","import os\n","\n","input_user = tf.keras.Input(shape=(None, ), name='user')\n","input_gender = tf.keras.Input(shape=(None, ), name='gender')\n","input_age = tf.keras.Input(shape=(None, ), name='age')\n","input_membership = tf.keras.Input(shape=(None, ), name='membership')\n","input_prior_month_spend = tf.keras.Input(shape=(None, ), name='prior_month_spend') \n","input_interest1= tf.keras.Input(shape=(None, ), name='interest1')\n","input_interest2 = tf.keras.Input(shape=(None, ), name='interest2') \n","\n","input_product_hist = tf.keras.layers.Input(shape=(None,), name='product_hist')\n","input_order_dow_hist = tf.keras.layers.Input(shape=(None,), name='order_dow_hist')\n","input_order_hour_of_day_hist = tf.keras.Input(shape=(None, ), name='order_hour_of_day_hist')\n","input_days_since_prior_order_hist = tf.keras.Input(shape=(None, ), name='days_since_prior_order_hist')\n","input_purchase_alarm_hist = tf.keras.Input(shape=(None, ), name='purchase_alarm_hist') # purchase alarm 추가\n","\n","\n","# layer 구성\n","features_embedding_layer = tf.keras.layers.Embedding(input_dim=NUM_CLASSES, output_dim=EMBEDDING_DIMS, \n","                                            mask_zero=True, trainable=True, name='features_embeddings')\n","labels_embedding_layer = tf.keras.layers.Embedding(input_dim=NUM_CLASSES, output_dim=EMBEDDING_DIMS, \n","                                            mask_zero=True, trainable=True, name='labels_embeddings')\n","\n","avg_embeddings = MaskedEmbeddingsAggregatorLayer(agg_mode='mean', name='aggregate_embeddings')\n","\n","dense_1 = tf.keras.layers.Dense(units=DENSE_UNITS, name='dense_1')\n","dense_2 = tf.keras.layers.Dense(units=DENSE_UNITS, name='dense_2')\n","dense_3 = tf.keras.layers.Dense(units=DENSE_UNITS, name='dense_3')\n","l2_norm_1 = L2NormLayer(name='l2_norm_1')\n","dense_output = tf.keras.layers.Dense(NUM_CLASSES, activation=tf.nn.softmax, name='dense_output')\n","\n","# feature 투입 (\"추가 변수 포함\")\n","features_embeddings = features_embedding_layer(input_user)\n","l2_norm_features = l2_norm_1(features_embeddings)\n","avg_user = avg_embeddings(l2_norm_features)\n","\n","labels_gender = labels_embedding_layer(input_gender)\n","l2_norm_gender = l2_norm_1(labels_gender)\n","avg_gender = avg_embeddings(l2_norm_gender)\n","\n","labels_prior_age = labels_embedding_layer(input_age)\n","l2_norm_age = l2_norm_1(labels_prior_age)\n","avg_age = avg_embeddings(l2_norm_age)\n","\n","labels_prior_membership = labels_embedding_layer(input_membership)\n","l2_norm_membership = l2_norm_1(labels_prior_membership)\n","avg_membership = avg_embeddings(l2_norm_membership)\n","\n","labels_prior_month_spend = labels_embedding_layer(input_prior_month_spend)\n","l2_norm_prior_month_spend = l2_norm_1(labels_prior_month_spend)\n","avg_prior_month_spend = avg_embeddings(l2_norm_prior_month_spend)\n","\n","labels_interest1 = labels_embedding_layer(input_interest1)\n","l2_norm_interest1 = l2_norm_1(labels_interest1)\n","avg_interest1 = avg_embeddings(l2_norm_interest1)\n","\n","labels_interest2 = labels_embedding_layer(input_interest2)\n","l2_norm_interest2 = l2_norm_1(labels_interest2)\n","avg_interest2 = avg_embeddings(l2_norm_interest2)\n","\n","labels_product_embeddings = labels_embedding_layer(input_product_hist)\n","l2_norm_product = l2_norm_1(labels_product_embeddings)\n","avg_product = avg_embeddings(l2_norm_product)\n","\n","labels_order_dow_embeddings = labels_embedding_layer(input_order_dow_hist)\n","l2_norm_order_dow = l2_norm_1(labels_order_dow_embeddings)\n","avg_order_dow = avg_embeddings(l2_norm_order_dow)\n","\n","labels_order_hour_embeddings = labels_embedding_layer(input_order_hour_of_day_hist)\n","l2_norm_order_hour = l2_norm_1(labels_order_hour_embeddings)\n","avg_order_hour = avg_embeddings(l2_norm_order_hour)\n","\n","labels_days_since_prior_embeddings = labels_embedding_layer(input_days_since_prior_order_hist)\n","l2_norm_days_since_prior = l2_norm_1(labels_days_since_prior_embeddings)\n","avg_days_since_prior = avg_embeddings(l2_norm_days_since_prior)\n","\n","labels_purchase_alarms_embeddings = labels_embedding_layer(input_purchase_alarm_hist)\n","l2_norm_purchase_alarms = l2_norm_1(labels_purchase_alarms_embeddings)\n","avg_purchase_alarm = avg_embeddings(l2_norm_purchase_alarms)\n","\n","print(avg_user)\n","print(avg_gender)\n","print(avg_age)\n","print(avg_membership)\n","print(avg_prior_month_spend)\n","print(avg_interest1)\n","print(avg_interest2)\n","print(avg_product)\n","print(avg_order_dow)\n","print(avg_order_hour)\n","print(avg_days_since_prior)\n","print(avg_purchase_alarm)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wjczBEquL_ne","executionInfo":{"status":"ok","timestamp":1662620807089,"user_tz":-540,"elapsed":1341,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"aeeffbff-c4ff-401e-ae7a-38398abf839f"},"id":"wjczBEquL_ne","execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":["KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n","KerasTensor(type_spec=TensorSpec(shape=(None, 16), dtype=tf.float32, name=None), name='aggregate_embeddings/PartitionedCall:0', description=\"created by layer 'aggregate_embeddings'\")\n"]}]},{"cell_type":"code","source":["# 임베딩 벡터들 연결\n","concat_inputs = tf.keras.layers.Concatenate(axis=1)([avg_age,\n","                                                     avg_gender,\n","                                                     avg_membership,\n","                                                     avg_prior_month_spend,\n","                                                     avg_interest1,\n","                                                     avg_interest2,\n","                                                     avg_product,\n","                                                     avg_order_dow, \n","                                                     avg_order_hour,\n","                                                     avg_days_since_prior,\n","                                                     avg_purchase_alarm\n","                                                     ])\n","# Dense Layers\n","dense_1_features = dense_1(concat_inputs)\n","dense_1_relu = tf.keras.layers.ReLU(name='dense_1_relu')(dense_1_features)\n","dense_1_batch_norm = tf.keras.layers.BatchNormalization(name='dense_1_batch_norm')(dense_1_relu)\n","\n","dense_2_features = dense_2(dense_1_relu)\n","dense_2_relu = tf.keras.layers.ReLU(name='dense_2_relu')(dense_2_features)\n","dense_2_batch_norm = tf.keras.layers.BatchNormalization(name='dense_2_batch_norm')(dense_2_relu)\n","\n","dense_3_features = dense_3(dense_2_relu)\n","dense_3_relu = tf.keras.layers.ReLU(name='dense_3_relu')(dense_3_features)\n","dense_3_batch_norm = tf.keras.layers.BatchNormalization(name='dense_3_batch_norm')(dense_3_relu)\n","\n","outputs = dense_output(dense_3_batch_norm)\n","\n","#Optimizer\n","optimizer = tf.keras.optimizers.Adam(learning_rate=LEARNING_RATE)\n","\n","#--- prep model\n","model = tf.keras.models.Model(\n","    inputs=[input_gender,\n","            input_age,\n","            input_membership,\n","            input_prior_month_spend,\n","            input_interest1,\n","            input_interest2,\n","            input_product_hist,\n","            input_order_dow_hist,\n","            input_order_hour_of_day_hist,\n","            input_days_since_prior_order_hist,\n","            input_purchase_alarm_hist\n","            ],\n","    outputs=[outputs]\n",")\n","logdir = os.path.join(\"logs\", datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\"))\n","tensorboard_callback = tf.keras.callbacks.TensorBoard(logdir, histogram_freq=1)\n","model.compile(optimizer=optimizer, loss='sparse_categorical_crossentropy', metrics=['acc']) \n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELQQTg5mRThz","executionInfo":{"status":"ok","timestamp":1662620809814,"user_tz":-540,"elapsed":707,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"f1ea1cf1-2af7-4f9f-b24e-b49a42f889f5"},"id":"ELQQTg5mRThz","execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," age (InputLayer)               [(None, None)]       0           []                               \n","                                                                                                  \n"," gender (InputLayer)            [(None, None)]       0           []                               \n","                                                                                                  \n"," membership (InputLayer)        [(None, None)]       0           []                               \n","                                                                                                  \n"," prior_month_spend (InputLayer)  [(None, None)]      0           []                               \n","                                                                                                  \n"," interest1 (InputLayer)         [(None, None)]       0           []                               \n","                                                                                                  \n"," interest2 (InputLayer)         [(None, None)]       0           []                               \n","                                                                                                  \n"," product_hist (InputLayer)      [(None, None)]       0           []                               \n","                                                                                                  \n"," order_dow_hist (InputLayer)    [(None, None)]       0           []                               \n","                                                                                                  \n"," order_hour_of_day_hist (InputL  [(None, None)]      0           []                               \n"," ayer)                                                                                            \n","                                                                                                  \n"," days_since_prior_order_hist (I  [(None, None)]      0           []                               \n"," nputLayer)                                                                                       \n","                                                                                                  \n"," purchase_alarm_hist (InputLaye  [(None, None)]      0           []                               \n"," r)                                                                                               \n","                                                                                                  \n"," labels_embeddings (Embedding)  (None, None, 16)     795024      ['gender[0][0]',                 \n","                                                                  'age[0][0]',                    \n","                                                                  'membership[0][0]',             \n","                                                                  'prior_month_spend[0][0]',      \n","                                                                  'interest1[0][0]',              \n","                                                                  'interest2[0][0]',              \n","                                                                  'product_hist[0][0]',           \n","                                                                  'order_dow_hist[0][0]',         \n","                                                                  'order_hour_of_day_hist[0][0]', \n","                                                                  'days_since_prior_order_hist[0][\n","                                                                 0]',                             \n","                                                                  'purchase_alarm_hist[0][0]']    \n","                                                                                                  \n"," l2_norm_1 (L2NormLayer)        (None, None, 16)     0           ['labels_embeddings[0][0]',      \n","                                                                  'labels_embeddings[1][0]',      \n","                                                                  'labels_embeddings[2][0]',      \n","                                                                  'labels_embeddings[3][0]',      \n","                                                                  'labels_embeddings[4][0]',      \n","                                                                  'labels_embeddings[5][0]',      \n","                                                                  'labels_embeddings[6][0]',      \n","                                                                  'labels_embeddings[7][0]',      \n","                                                                  'labels_embeddings[8][0]',      \n","                                                                  'labels_embeddings[9][0]',      \n","                                                                  'labels_embeddings[10][0]']     \n","                                                                                                  \n"," aggregate_embeddings (MaskedEm  (None, 16)          0           ['l2_norm_1[1][0]',              \n"," beddingsAggregatorLayer)                                         'l2_norm_1[2][0]',              \n","                                                                  'l2_norm_1[3][0]',              \n","                                                                  'l2_norm_1[4][0]',              \n","                                                                  'l2_norm_1[5][0]',              \n","                                                                  'l2_norm_1[6][0]',              \n","                                                                  'l2_norm_1[7][0]',              \n","                                                                  'l2_norm_1[8][0]',              \n","                                                                  'l2_norm_1[9][0]',              \n","                                                                  'l2_norm_1[10][0]',             \n","                                                                  'l2_norm_1[11][0]']             \n","                                                                                                  \n"," concatenate_1 (Concatenate)    (None, 176)          0           ['aggregate_embeddings[2][0]',   \n","                                                                  'aggregate_embeddings[1][0]',   \n","                                                                  'aggregate_embeddings[3][0]',   \n","                                                                  'aggregate_embeddings[4][0]',   \n","                                                                  'aggregate_embeddings[5][0]',   \n","                                                                  'aggregate_embeddings[6][0]',   \n","                                                                  'aggregate_embeddings[7][0]',   \n","                                                                  'aggregate_embeddings[8][0]',   \n","                                                                  'aggregate_embeddings[9][0]',   \n","                                                                  'aggregate_embeddings[10][0]',  \n","                                                                  'aggregate_embeddings[11][0]']  \n","                                                                                                  \n"," dense_1 (Dense)                (None, 64)           11328       ['concatenate_1[0][0]']          \n","                                                                                                  \n"," dense_1_relu (ReLU)            (None, 64)           0           ['dense_1[0][0]']                \n","                                                                                                  \n"," dense_2 (Dense)                (None, 64)           4160        ['dense_1_relu[0][0]']           \n","                                                                                                  \n"," dense_2_relu (ReLU)            (None, 64)           0           ['dense_2[0][0]']                \n","                                                                                                  \n"," dense_3 (Dense)                (None, 64)           4160        ['dense_2_relu[0][0]']           \n","                                                                                                  \n"," dense_3_relu (ReLU)            (None, 64)           0           ['dense_3[0][0]']                \n","                                                                                                  \n"," dense_3_batch_norm (BatchNorma  (None, 64)          256         ['dense_3_relu[0][0]']           \n"," lization)                                                                                        \n","                                                                                                  \n"," dense_output (Dense)           (None, 49689)        3229785     ['dense_3_batch_norm[0][0]']     \n","                                                                                                  \n","==================================================================================================\n","Total params: 4,044,713\n","Trainable params: 4,044,585\n","Non-trainable params: 128\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["train_data.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":780},"id":"DMJfmeLBSVIw","executionInfo":{"status":"ok","timestamp":1662620812466,"user_tz":-540,"elapsed":565,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"a4c0ef27-58f9-4504-a8f7-4f312ceeb0e1"},"id":"DMJfmeLBSVIw","execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     user  user_id                                             Gender  \\\n","0       0       48  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","124     1       52  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","298     2       62  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","\n","                                                   Age  \\\n","0    [46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...   \n","124  [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...   \n","298  [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...   \n","\n","                                            Membership  \\\n","0    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...   \n","124  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","298  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...   \n","\n","                                     Prior_Month_Spend  \\\n","0    [1131220, 1131220, 1131220, 1131220, 1131220, ...   \n","124  [599947, 599947, 599947, 599947, 599947, 59994...   \n","298  [496729, 496729, 496729, 496729, 496729, 49672...   \n","\n","                                               aisle_1  \\\n","0    [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...   \n","124  [96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 9...   \n","298  [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","\n","                                               aisle_2  \\\n","0    [36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...   \n","124  [52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 5...   \n","298  [73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 7...   \n","\n","                                days_since_prior_order  \\\n","0    [27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...   \n","124  [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, ...   \n","298  [10, 10, 10, 10, 10, 10, 30, 30, 30, 30, 30, 3...   \n","\n","                                              order_id  \\\n","0    [3166874, 2766710, 501067, 1643524, 1657641, 7...   \n","124  [1318871, 1261384, 2100631, 580568, 1680554, 2...   \n","298  [964058, 2163945, 3349827, 1376443, 2655621, 1...   \n","\n","                                            product_id  \\\n","0    [45007, 22613, 28842, 21405, 26209, 19508, 248...   \n","124  [12341, 6184, 10441, 46149, 196, 14309, 46149,...   \n","298  [49075, 39121, 21724, 48017, 36695, 28289, 391...   \n","\n","                                             order_dow  \\\n","0    [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...   \n","124  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...   \n","298  [4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, ...   \n","\n","                                     order_hour_of_day  \\\n","0    [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...   \n","124  [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...   \n","298  [10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 1...   \n","\n","                                        Purchase_alarm  predict_label  \n","0    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...          29941  \n","124  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...           6184  \n","298  [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...          30233  "],"text/html":["\n","  <div id=\"df-fab3d09b-7669-417b-89eb-237f161e60ca\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>user_id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Membership</th>\n","      <th>Prior_Month_Spend</th>\n","      <th>aisle_1</th>\n","      <th>aisle_2</th>\n","      <th>days_since_prior_order</th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>order_dow</th>\n","      <th>order_hour_of_day</th>\n","      <th>Purchase_alarm</th>\n","      <th>predict_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 4...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...</td>\n","      <td>[1131220, 1131220, 1131220, 1131220, 1131220, ...</td>\n","      <td>[70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 7...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 2...</td>\n","      <td>[3166874, 2766710, 501067, 1643524, 1657641, 7...</td>\n","      <td>[45007, 22613, 28842, 21405, 26209, 19508, 248...</td>\n","      <td>[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...</td>\n","      <td>[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","      <td>29941</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>1</td>\n","      <td>52</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[599947, 599947, 599947, 599947, 599947, 59994...</td>\n","      <td>[96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 9...</td>\n","      <td>[52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 5...</td>\n","      <td>[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, ...</td>\n","      <td>[1318871, 1261384, 2100631, 580568, 1680554, 2...</td>\n","      <td>[12341, 6184, 10441, 46149, 196, 14309, 46149,...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>6184</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>2</td>\n","      <td>62</td>\n","      <td>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...</td>\n","      <td>[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 4...</td>\n","      <td>[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...</td>\n","      <td>[496729, 496729, 496729, 496729, 496729, 49672...</td>\n","      <td>[36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 3...</td>\n","      <td>[73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 7...</td>\n","      <td>[10, 10, 10, 10, 10, 10, 30, 30, 30, 30, 30, 3...</td>\n","      <td>[964058, 2163945, 3349827, 1376443, 2655621, 1...</td>\n","      <td>[49075, 39121, 21724, 48017, 36695, 28289, 391...</td>\n","      <td>[4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, ...</td>\n","      <td>[10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 1...</td>\n","      <td>[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","      <td>30233</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fab3d09b-7669-417b-89eb-237f161e60ca')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fab3d09b-7669-417b-89eb-237f161e60ca button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fab3d09b-7669-417b-89eb-237f161e60ca');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["print(train_data.shape)\n","print(test_data.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H4Gul553TokR","executionInfo":{"status":"ok","timestamp":1662620814483,"user_tz":-540,"elapsed":7,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"a3837b52-95f4-4680-c882-34b220b84385"},"id":"H4Gul553TokR","execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["(50, 15)\n","(50, 15)\n"]}]},{"cell_type":"code","source":["# 학습(training)\n","history = model.fit([tf.keras.preprocessing.sequence.pad_sequences(train_data['Gender']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['Age']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['Membership']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['Prior_Month_Spend']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['aisle_1']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['aisle_2']),                                              \n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['product_id']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['order_dow']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['order_hour_of_day']), #+ 1e-10, dtype=float\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['days_since_prior_order']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['Purchase_alarm'])\n","                    ],train_data['predict_label'].values,\n","                  #batch_size=16,\n","                  steps_per_epoch=1, epochs=300)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qPu1uX1kT69t","executionInfo":{"status":"ok","timestamp":1662620839363,"user_tz":-540,"elapsed":22913,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"3418fe01-e1cd-47e9-b252-cbb693733705"},"id":"qPu1uX1kT69t","execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/300\n","1/1 [==============================] - 2s 2s/step - loss: nan - acc: 0.0000e+00\n","Epoch 2/300\n","1/1 [==============================] - 0s 51ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 3/300\n","1/1 [==============================] - 0s 51ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 4/300\n","1/1 [==============================] - 0s 56ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 5/300\n","1/1 [==============================] - 0s 52ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 6/300\n","1/1 [==============================] - 0s 52ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 7/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 8/300\n","1/1 [==============================] - 0s 49ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 9/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 10/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 11/300\n","1/1 [==============================] - 0s 52ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 12/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 13/300\n","1/1 [==============================] - 0s 51ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 14/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 15/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 16/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 17/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 18/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 19/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 20/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 21/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 22/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 23/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 24/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 25/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 26/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 27/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 28/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 29/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 30/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 31/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 32/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 33/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 34/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 35/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 36/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 37/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 38/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 39/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 40/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 41/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 42/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 43/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 44/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 45/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 46/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 47/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 48/300\n","1/1 [==============================] - 0s 39ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 49/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 50/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 51/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 52/300\n","1/1 [==============================] - 0s 49ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 53/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 54/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 55/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 56/300\n","1/1 [==============================] - 0s 39ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 57/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 58/300\n","1/1 [==============================] - 0s 39ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 59/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 60/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 61/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 62/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 63/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 64/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 65/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 66/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 67/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 68/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 69/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 70/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 71/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 72/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 73/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 74/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 75/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 76/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 77/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 78/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 79/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 80/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 81/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 82/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 83/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 84/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 85/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 86/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 87/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 88/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 89/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 90/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 91/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 92/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 93/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 94/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 95/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 96/300\n","1/1 [==============================] - 0s 38ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 97/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 98/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 99/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 100/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 101/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 102/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 103/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 104/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 105/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 106/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 107/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 108/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 109/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 110/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 111/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 112/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 113/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 114/300\n","1/1 [==============================] - 0s 51ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 115/300\n","1/1 [==============================] - 0s 39ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 116/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 117/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 118/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 119/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 120/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 121/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 122/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 123/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 124/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 125/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 126/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 127/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 128/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 129/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 130/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 131/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 132/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 133/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 134/300\n","1/1 [==============================] - 0s 57ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 135/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 136/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 137/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 138/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 139/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 140/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 141/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 142/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 143/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 144/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 145/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 146/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 147/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 148/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 149/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 150/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 151/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 152/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 153/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 154/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 155/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 156/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 157/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 158/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 159/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 160/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 161/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 162/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 163/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 164/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 165/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 166/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 167/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 168/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 169/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 170/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 171/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 172/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 173/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 174/300\n","1/1 [==============================] - 0s 49ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 175/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 176/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 177/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 178/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 179/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 180/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 181/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 182/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 183/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 184/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 185/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 186/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 187/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 188/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 189/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 190/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 191/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 192/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 193/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 194/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 195/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 196/300\n","1/1 [==============================] - 0s 53ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 197/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 198/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 199/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 200/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 201/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 202/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 203/300\n","1/1 [==============================] - 0s 38ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 204/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 205/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 206/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 207/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 208/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 209/300\n","1/1 [==============================] - 0s 52ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 210/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 211/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 212/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 213/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 214/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 215/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 216/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 217/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 218/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 219/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 220/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 221/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 222/300\n","1/1 [==============================] - 0s 50ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 223/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 224/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 225/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 226/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 227/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 228/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 229/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 230/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 231/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 232/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 233/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 234/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 235/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 236/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 237/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 238/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 239/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 240/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 241/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 242/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 243/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 244/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 245/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 246/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 247/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 248/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 249/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 250/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 251/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 252/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 253/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 254/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 255/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 256/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 257/300\n","1/1 [==============================] - 0s 42ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 258/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 259/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 260/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 261/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 262/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 263/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 264/300\n","1/1 [==============================] - 0s 49ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 265/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 266/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 267/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 268/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 269/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 270/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 271/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 272/300\n","1/1 [==============================] - 0s 40ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 273/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 274/300\n","1/1 [==============================] - 0s 39ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 275/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 276/300\n","1/1 [==============================] - 0s 57ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 277/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 278/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 279/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 280/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 281/300\n","1/1 [==============================] - 0s 47ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 282/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 283/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 284/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 285/300\n","1/1 [==============================] - 0s 45ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 286/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 287/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 288/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 289/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 290/300\n","1/1 [==============================] - 0s 48ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 291/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 292/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 293/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 294/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 295/300\n","1/1 [==============================] - 0s 43ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 296/300\n","1/1 [==============================] - 0s 52ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 297/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 298/300\n","1/1 [==============================] - 0s 46ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 299/300\n","1/1 [==============================] - 0s 41ms/step - loss: nan - acc: 0.0000e+00\n","Epoch 300/300\n","1/1 [==============================] - 0s 44ms/step - loss: nan - acc: 0.0000e+00\n"]}]},{"cell_type":"code","source":["# 모델 저장\n","model.save(\"candidate_generation.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tvw8Mz23RwrO","executionInfo":{"status":"ok","timestamp":1662620643656,"user_tz":-540,"elapsed":522,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"8a8aaa3b-40e1-4290-b4c7-e4acd2368d78"},"id":"tvw8Mz23RwrO","execution_count":97,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  layer_config = serialize_layer_fn(layer)\n"]}]},{"cell_type":"code","source":["# 모델 예측결과 추출\n","pred = model.predict([tf.keras.preprocessing.sequence.pad_sequences(test_data['Gender']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['Age']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['Membership']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['Prior_Month_Spend']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['aisle_1']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['aisle_2']), \n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['product_id']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['order_dow']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['order_hour_of_day']), #+ 1e-10, dtype=float\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['days_since_prior_order']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['Purchase_alarm'])\n","           ])\n","\n","pred"],"metadata":{"id":"K0EqVr-LVBwC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662620736491,"user_tz":-540,"elapsed":1168,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"39701802-8ed7-4c6b-c8b0-cfe9302f9e32"},"id":"K0EqVr-LVBwC","execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[nan, nan, nan, ..., nan, nan, nan],\n","       [nan, nan, nan, ..., nan, nan, nan],\n","       [nan, nan, nan, ..., nan, nan, nan],\n","       ...,\n","       [nan, nan, nan, ..., nan, nan, nan],\n","       [nan, nan, nan, ..., nan, nan, nan],\n","       [nan, nan, nan, ..., nan, nan, nan]], dtype=float32)"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["### Loss 'nan'이어서 다시 시도!\n","- 예제대로 해서 되는지 확인! : 동일값 반복되는 feature 주석 처리"],"metadata":{"id":"GEJXbUZh7XLM"},"id":"GEJXbUZh7XLM"},{"cell_type":"code","source":["EMBEDDING_DIMS = 16\n","DENSE_UNITS = 64\n","DROPOUT_PCT = 0.1\n","ALPHA = 0.1\n","NUM_CLASSES = data[\"product_id\"].max() + 2 \n","LEARNING_RATE = 0.1"],"metadata":{"id":"1D_UFVjtBJKn","executionInfo":{"status":"ok","timestamp":1662622650112,"user_tz":-540,"elapsed":497,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"1D_UFVjtBJKn","execution_count":126,"outputs":[]},{"cell_type":"code","source":["# modeling\n","\n","import tensorflow as tf\n","import datetime\n","import os\n","\n","input_user = tf.keras.Input(shape=(None, ), name='user')\n","# input_gender = tf.keras.Input(shape=(None, ), name='gender')\n","# input_age = tf.keras.Input(shape=(None, ), name='age')\n","# input_membership = tf.keras.Input(shape=(None, ), name='membership')\n","# input_prior_month_spend = tf.keras.Input(shape=(None, ), name='prior_month_spend') \n","# input_interest1= tf.keras.Input(shape=(None, ), name='interest1')\n","# input_interest2 = tf.keras.Input(shape=(None, ), name='interest2') \n","\n","input_product_hist = tf.keras.layers.Input(shape=(None,), name='product_hist')\n","input_order_dow_hist = tf.keras.layers.Input(shape=(None,), name='order_dow_hist')\n","input_order_hour_of_day_hist = tf.keras.Input(shape=(None, ), name='order_hour_of_day_hist')\n","input_days_since_prior_order_hist = tf.keras.Input(shape=(None, ), name='days_since_prior_order_hist')\n","# input_purchase_alarm_hist = tf.keras.Input(shape=(None, ), name='purchase_alarm_hist') # purchase alarm 추가\n","\n","\n","# layer 구성\n","features_embedding_layer = tf.keras.layers.Embedding(input_dim=NUM_CLASSES, output_dim=EMBEDDING_DIMS, \n","                                            mask_zero=True, trainable=True, name='features_embeddings')\n","labels_embedding_layer = tf.keras.layers.Embedding(input_dim=NUM_CLASSES, output_dim=EMBEDDING_DIMS, \n","                                            mask_zero=True, trainable=True, name='labels_embeddings')\n","\n","avg_embeddings = MaskedEmbeddingsAggregatorLayer(agg_mode='mean', name='aggregate_embeddings')\n","\n","dense_1 = tf.keras.layers.Dense(units=DENSE_UNITS, name='dense_1')\n","dense_2 = tf.keras.layers.Dense(units=DENSE_UNITS, name='dense_2')\n","dense_3 = tf.keras.layers.Dense(units=DENSE_UNITS, name='dense_3')\n","l2_norm_1 = L2NormLayer(name='l2_norm_1')\n","dense_output = tf.keras.layers.Dense(NUM_CLASSES, activation=tf.nn.softmax, name='dense_output')\n","\n","# feature 투입 (\"추가 변수 포함\")\n","features_embeddings = features_embedding_layer(input_user)\n","l2_norm_features = l2_norm_1(features_embeddings)\n","avg_user = avg_embeddings(l2_norm_features)\n","\n","# labels_gender = labels_embedding_layer(input_gender)\n","# l2_norm_gender = l2_norm_1(labels_gender)\n","# avg_gender = avg_embeddings(l2_norm_gender)\n","\n","# labels_prior_age = labels_embedding_layer(input_age)\n","# l2_norm_age = l2_norm_1(labels_prior_age)\n","# avg_age = avg_embeddings(l2_norm_age)\n","\n","# labels_prior_membership = labels_embedding_layer(input_membership)\n","# l2_norm_membership = l2_norm_1(labels_prior_membership)\n","# avg_membership = avg_embeddings(l2_norm_membership)\n","\n","# labels_prior_month_spend = labels_embedding_layer(input_prior_month_spend)\n","# l2_norm_prior_month_spend = l2_norm_1(labels_prior_month_spend)\n","# avg_prior_month_spend = avg_embeddings(l2_norm_prior_month_spend)\n","\n","# labels_interest1 = labels_embedding_layer(input_interest1)\n","# l2_norm_interest1 = l2_norm_1(labels_interest1)\n","# avg_interest1 = avg_embeddings(l2_norm_interest1)\n","\n","# labels_interest2 = labels_embedding_layer(input_interest2)\n","# l2_norm_interest2 = l2_norm_1(labels_interest2)\n","# avg_interest2 = avg_embeddings(l2_norm_interest2)\n","\n","labels_product_embeddings = labels_embedding_layer(input_product_hist)\n","l2_norm_product = l2_norm_1(labels_product_embeddings)\n","avg_product = avg_embeddings(l2_norm_product)\n","\n","labels_order_dow_embeddings = labels_embedding_layer(input_order_dow_hist)\n","l2_norm_order_dow = l2_norm_1(labels_order_dow_embeddings)\n","avg_order_dow = avg_embeddings(l2_norm_order_dow)\n","\n","labels_order_hour_embeddings = labels_embedding_layer(input_order_hour_of_day_hist)\n","l2_norm_order_hour = l2_norm_1(labels_order_hour_embeddings)\n","avg_order_hour = avg_embeddings(l2_norm_order_hour)\n","\n","labels_days_since_prior_embeddings = labels_embedding_layer(input_days_since_prior_order_hist)\n","l2_norm_days_since_prior = l2_norm_1(labels_days_since_prior_embeddings)\n","avg_days_since_prior = avg_embeddings(l2_norm_days_since_prior)\n","\n","# labels_purchase_alarms_embeddings = labels_embedding_layer(input_purchase_alarm_hist)\n","# l2_norm_purchase_alarms = l2_norm_1(labels_purchase_alarms_embeddings)\n","# avg_purchase_alarm = avg_embeddings(l2_norm_purchase_alarms)"],"metadata":{"id":"01UqYW9XR0gU","executionInfo":{"status":"ok","timestamp":1662622652749,"user_tz":-540,"elapsed":5,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"01UqYW9XR0gU","execution_count":127,"outputs":[]},{"cell_type":"code","source":["# 임베딩 벡터들 연결\n","concat_inputs = tf.keras.layers.Concatenate(axis=1)([\n","                                                     avg_product,\n","                                                     avg_order_dow, \n","                                                     avg_order_hour,\n","                                                     avg_days_since_prior,\n","                                                    #  avg_purchase_alarm\n","                                                     ])\n","# Dense Layers\n","dense_1_features = dense_1(concat_inputs)\n","dense_1_relu = tf.keras.layers.ReLU(name='dense_1_relu')(dense_1_features)\n","dense_1_batch_norm = tf.keras.layers.BatchNormalization(name='dense_1_batch_norm')(dense_1_relu)\n","\n","dense_2_features = dense_2(dense_1_relu)\n","dense_2_relu = tf.keras.layers.ReLU(name='dense_2_relu')(dense_2_features)\n","dense_2_batch_norm = tf.keras.layers.BatchNormalization(name='dense_2_batch_norm')(dense_2_relu)\n","\n","dense_3_features = dense_3(dense_2_relu)\n","dense_3_relu = tf.keras.layers.ReLU(name='dense_3_relu')(dense_3_features)\n","dense_3_batch_norm = tf.keras.layers.BatchNormalization(name='dense_3_batch_norm')(dense_3_relu)\n","\n","outputs = dense_output(dense_3_batch_norm)\n","\n","#Optimizer\n","optimizer = tf.keras.optimizers.Adam(learning_rate=LEARNING_RATE)\n","\n","#--- prep model\n","model = tf.keras.models.Model(\n","    inputs=[\n","            input_product_hist,\n","            input_order_dow_hist,\n","            input_order_hour_of_day_hist,\n","            input_days_since_prior_order_hist,\n","            # input_purchase_alarm_hist\n","            ],\n","    outputs=[outputs]\n",")\n","logdir = os.path.join(\"logs\", datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\"))\n","tensorboard_callback = tf.keras.callbacks.TensorBoard(logdir, histogram_freq=1)\n","model.compile(optimizer=optimizer, loss='sparse_categorical_crossentropy', metrics=['acc']) \n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W-JrpuKP925u","executionInfo":{"status":"ok","timestamp":1662622655364,"user_tz":-540,"elapsed":39,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"e375c10c-593d-410a-b5b2-f72a7418bd75"},"id":"W-JrpuKP925u","execution_count":128,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_7\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," product_hist (InputLayer)      [(None, None)]       0           []                               \n","                                                                                                  \n"," order_dow_hist (InputLayer)    [(None, None)]       0           []                               \n","                                                                                                  \n"," order_hour_of_day_hist (InputL  [(None, None)]      0           []                               \n"," ayer)                                                                                            \n","                                                                                                  \n"," days_since_prior_order_hist (I  [(None, None)]      0           []                               \n"," nputLayer)                                                                                       \n","                                                                                                  \n"," labels_embeddings (Embedding)  (None, None, 16)     795024      ['product_hist[0][0]',           \n","                                                                  'order_dow_hist[0][0]',         \n","                                                                  'order_hour_of_day_hist[0][0]', \n","                                                                  'days_since_prior_order_hist[0][\n","                                                                 0]']                             \n","                                                                                                  \n"," l2_norm_1 (L2NormLayer)        (None, None, 16)     0           ['labels_embeddings[0][0]',      \n","                                                                  'labels_embeddings[1][0]',      \n","                                                                  'labels_embeddings[2][0]',      \n","                                                                  'labels_embeddings[3][0]']      \n","                                                                                                  \n"," aggregate_embeddings (MaskedEm  (None, 16)          0           ['l2_norm_1[1][0]',              \n"," beddingsAggregatorLayer)                                         'l2_norm_1[2][0]',              \n","                                                                  'l2_norm_1[3][0]',              \n","                                                                  'l2_norm_1[4][0]']              \n","                                                                                                  \n"," concatenate_9 (Concatenate)    (None, 64)           0           ['aggregate_embeddings[1][0]',   \n","                                                                  'aggregate_embeddings[2][0]',   \n","                                                                  'aggregate_embeddings[3][0]',   \n","                                                                  'aggregate_embeddings[4][0]']   \n","                                                                                                  \n"," dense_1 (Dense)                (None, 64)           4160        ['concatenate_9[0][0]']          \n","                                                                                                  \n"," dense_1_relu (ReLU)            (None, 64)           0           ['dense_1[0][0]']                \n","                                                                                                  \n"," dense_2 (Dense)                (None, 64)           4160        ['dense_1_relu[0][0]']           \n","                                                                                                  \n"," dense_2_relu (ReLU)            (None, 64)           0           ['dense_2[0][0]']                \n","                                                                                                  \n"," dense_3 (Dense)                (None, 64)           4160        ['dense_2_relu[0][0]']           \n","                                                                                                  \n"," dense_3_relu (ReLU)            (None, 64)           0           ['dense_3[0][0]']                \n","                                                                                                  \n"," dense_3_batch_norm (BatchNorma  (None, 64)          256         ['dense_3_relu[0][0]']           \n"," lization)                                                                                        \n","                                                                                                  \n"," dense_output (Dense)           (None, 49689)        3229785     ['dense_3_batch_norm[0][0]']     \n","                                                                                                  \n","==================================================================================================\n","Total params: 4,037,545\n","Trainable params: 4,037,417\n","Non-trainable params: 128\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["# 학습(training)\n","history = model.fit([tf.keras.preprocessing.sequence.pad_sequences(train_data['product_id']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['order_dow']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['order_hour_of_day']), #+ 1e-10, dtype=float\n","                     tf.keras.preprocessing.sequence.pad_sequences(train_data['days_since_prior_order']),\n","                    #  tf.keras.preprocessing.sequence.pad_sequences(train_data['Purchase_alarm'])\n","                    ],train_data['predict_label'].values,\n","                  #batch_size=16,\n","                  steps_per_epoch=1, epochs=300)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0h3lnEwu-ZZs","executionInfo":{"status":"ok","timestamp":1662622700168,"user_tz":-540,"elapsed":12005,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"c85b7a11-8671-4294-caec-618d5e72c330"},"id":"0h3lnEwu-ZZs","execution_count":130,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/300\n","1/1 [==============================] - 1s 784ms/step - loss: 3.7530 - acc: 0.0800\n","Epoch 2/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.7690 - acc: 0.0600\n","Epoch 3/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.7660 - acc: 0.0600\n","Epoch 4/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.7424 - acc: 0.0600\n","Epoch 5/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.7535 - acc: 0.0600\n","Epoch 6/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7647 - acc: 0.0600\n","Epoch 7/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7557 - acc: 0.0600\n","Epoch 8/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.7863 - acc: 0.0600\n","Epoch 9/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7595 - acc: 0.0800\n","Epoch 10/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.7262 - acc: 0.0800\n","Epoch 11/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.7290 - acc: 0.0400\n","Epoch 12/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.7740 - acc: 0.1000\n","Epoch 13/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.7895 - acc: 0.0600\n","Epoch 14/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.7736 - acc: 0.0600\n","Epoch 15/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.7285 - acc: 0.0600\n","Epoch 16/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.7389 - acc: 0.0400\n","Epoch 17/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.7429 - acc: 0.0800\n","Epoch 18/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.7871 - acc: 0.0800\n","Epoch 19/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7358 - acc: 0.1000\n","Epoch 20/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.7238 - acc: 0.0600\n","Epoch 21/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.6767 - acc: 0.1000\n","Epoch 22/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7530 - acc: 0.0800\n","Epoch 23/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.7180 - acc: 0.1000\n","Epoch 24/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6400 - acc: 0.0600\n","Epoch 25/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6570 - acc: 0.0600\n","Epoch 26/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.7640 - acc: 0.0400\n","Epoch 27/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.7132 - acc: 0.0600\n","Epoch 28/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7229 - acc: 0.0400\n","Epoch 29/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.6922 - acc: 0.1000\n","Epoch 30/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6824 - acc: 0.0800\n","Epoch 31/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.6573 - acc: 0.1000\n","Epoch 32/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.7007 - acc: 0.0600\n","Epoch 33/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.7197 - acc: 0.0400\n","Epoch 34/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6273 - acc: 0.0800\n","Epoch 35/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6312 - acc: 0.1000\n","Epoch 36/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6499 - acc: 0.0600\n","Epoch 37/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6872 - acc: 0.0800\n","Epoch 38/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6366 - acc: 0.0800\n","Epoch 39/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6503 - acc: 0.0600\n","Epoch 40/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6974 - acc: 0.0800\n","Epoch 41/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6623 - acc: 0.0600\n","Epoch 42/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6700 - acc: 0.0600\n","Epoch 43/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6253 - acc: 0.0800\n","Epoch 44/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6549 - acc: 0.0800\n","Epoch 45/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6721 - acc: 0.0800\n","Epoch 46/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.6135 - acc: 0.1000\n","Epoch 47/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6327 - acc: 0.0800\n","Epoch 48/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.6414 - acc: 0.0800\n","Epoch 49/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6289 - acc: 0.1000\n","Epoch 50/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6498 - acc: 0.0800\n","Epoch 51/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6308 - acc: 0.0800\n","Epoch 52/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.6467 - acc: 0.0800\n","Epoch 53/300\n","1/1 [==============================] - 0s 35ms/step - loss: 3.6188 - acc: 0.0800\n","Epoch 54/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.6311 - acc: 0.0800\n","Epoch 55/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6085 - acc: 0.1000\n","Epoch 56/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5939 - acc: 0.0800\n","Epoch 57/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.6518 - acc: 0.0800\n","Epoch 58/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6099 - acc: 0.1000\n","Epoch 59/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6343 - acc: 0.0800\n","Epoch 60/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6024 - acc: 0.0800\n","Epoch 61/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6356 - acc: 0.1000\n","Epoch 62/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.6104 - acc: 0.1000\n","Epoch 63/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6026 - acc: 0.0800\n","Epoch 64/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.6339 - acc: 0.0800\n","Epoch 65/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6111 - acc: 0.0600\n","Epoch 66/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.6258 - acc: 0.0800\n","Epoch 67/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6078 - acc: 0.0800\n","Epoch 68/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5829 - acc: 0.1000\n","Epoch 69/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6031 - acc: 0.0800\n","Epoch 70/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5768 - acc: 0.1200\n","Epoch 71/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.6184 - acc: 0.0800\n","Epoch 72/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5992 - acc: 0.0800\n","Epoch 73/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.6160 - acc: 0.0800\n","Epoch 74/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5719 - acc: 0.0800\n","Epoch 75/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6138 - acc: 0.0800\n","Epoch 76/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5804 - acc: 0.1200\n","Epoch 77/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5643 - acc: 0.0800\n","Epoch 78/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5734 - acc: 0.1200\n","Epoch 79/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5549 - acc: 0.0800\n","Epoch 80/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5680 - acc: 0.1000\n","Epoch 81/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5756 - acc: 0.1200\n","Epoch 82/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5682 - acc: 0.0800\n","Epoch 83/300\n","1/1 [==============================] - 0s 41ms/step - loss: 3.6391 - acc: 0.0800\n","Epoch 84/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.7761 - acc: 0.0600\n","Epoch 85/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7949 - acc: 0.0600\n","Epoch 86/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5532 - acc: 0.1200\n","Epoch 87/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5354 - acc: 0.1000\n","Epoch 88/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5969 - acc: 0.1000\n","Epoch 89/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6264 - acc: 0.0600\n","Epoch 90/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6048 - acc: 0.1000\n","Epoch 91/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.5483 - acc: 0.0800\n","Epoch 92/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5767 - acc: 0.1000\n","Epoch 93/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5890 - acc: 0.1000\n","Epoch 94/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6197 - acc: 0.0400\n","Epoch 95/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6293 - acc: 0.0400\n","Epoch 96/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6479 - acc: 0.0800\n","Epoch 97/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5961 - acc: 0.1200\n","Epoch 98/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5939 - acc: 0.1000\n","Epoch 99/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6024 - acc: 0.0800\n","Epoch 100/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5134 - acc: 0.1000\n","Epoch 101/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5808 - acc: 0.0800\n","Epoch 102/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5078 - acc: 0.1000\n","Epoch 103/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6034 - acc: 0.0800\n","Epoch 104/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5638 - acc: 0.0800\n","Epoch 105/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5444 - acc: 0.0800\n","Epoch 106/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5539 - acc: 0.1000\n","Epoch 107/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5971 - acc: 0.0800\n","Epoch 108/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.6084 - acc: 0.0800\n","Epoch 109/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5974 - acc: 0.1000\n","Epoch 110/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6188 - acc: 0.0800\n","Epoch 111/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.6256 - acc: 0.0800\n","Epoch 112/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5570 - acc: 0.0800\n","Epoch 113/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5042 - acc: 0.1000\n","Epoch 114/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5435 - acc: 0.0600\n","Epoch 115/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.6041 - acc: 0.0800\n","Epoch 116/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5568 - acc: 0.1000\n","Epoch 117/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5478 - acc: 0.0800\n","Epoch 118/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5404 - acc: 0.0600\n","Epoch 119/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5448 - acc: 0.0800\n","Epoch 120/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.5443 - acc: 0.0800\n","Epoch 121/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5530 - acc: 0.0600\n","Epoch 122/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5312 - acc: 0.0800\n","Epoch 123/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5098 - acc: 0.0800\n","Epoch 124/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5649 - acc: 0.1200\n","Epoch 125/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5334 - acc: 0.0800\n","Epoch 126/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5149 - acc: 0.0800\n","Epoch 127/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5621 - acc: 0.1000\n","Epoch 128/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4892 - acc: 0.0600\n","Epoch 129/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.5791 - acc: 0.0600\n","Epoch 130/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5814 - acc: 0.1000\n","Epoch 131/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5515 - acc: 0.0600\n","Epoch 132/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5656 - acc: 0.0800\n","Epoch 133/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4894 - acc: 0.1200\n","Epoch 134/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5082 - acc: 0.1000\n","Epoch 135/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5498 - acc: 0.1000\n","Epoch 136/300\n","1/1 [==============================] - 0s 36ms/step - loss: 3.5071 - acc: 0.0600\n","Epoch 137/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5387 - acc: 0.1000\n","Epoch 138/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.4866 - acc: 0.0800\n","Epoch 139/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5220 - acc: 0.0800\n","Epoch 140/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.4381 - acc: 0.1200\n","Epoch 141/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4696 - acc: 0.1200\n","Epoch 142/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4548 - acc: 0.1400\n","Epoch 143/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.5374 - acc: 0.0800\n","Epoch 144/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5478 - acc: 0.1000\n","Epoch 145/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5440 - acc: 0.1200\n","Epoch 146/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.6082 - acc: 0.1000\n","Epoch 147/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4692 - acc: 0.1000\n","Epoch 148/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4767 - acc: 0.1200\n","Epoch 149/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5223 - acc: 0.1400\n","Epoch 150/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4743 - acc: 0.1400\n","Epoch 151/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5476 - acc: 0.0600\n","Epoch 152/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5912 - acc: 0.1000\n","Epoch 153/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5336 - acc: 0.1200\n","Epoch 154/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4557 - acc: 0.1400\n","Epoch 155/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4690 - acc: 0.1000\n","Epoch 156/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4588 - acc: 0.1200\n","Epoch 157/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4477 - acc: 0.1000\n","Epoch 158/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3953 - acc: 0.1200\n","Epoch 159/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5479 - acc: 0.1200\n","Epoch 160/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5335 - acc: 0.0800\n","Epoch 161/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.3451 - acc: 0.1000\n","Epoch 162/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5274 - acc: 0.1200\n","Epoch 163/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4782 - acc: 0.1000\n","Epoch 164/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4763 - acc: 0.0600\n","Epoch 165/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4192 - acc: 0.1400\n","Epoch 166/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4590 - acc: 0.1200\n","Epoch 167/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4636 - acc: 0.1200\n","Epoch 168/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5723 - acc: 0.1000\n","Epoch 169/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4975 - acc: 0.1000\n","Epoch 170/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4498 - acc: 0.1200\n","Epoch 171/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4630 - acc: 0.1000\n","Epoch 172/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.4811 - acc: 0.1000\n","Epoch 173/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.3646 - acc: 0.1000\n","Epoch 174/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4442 - acc: 0.1400\n","Epoch 175/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5047 - acc: 0.1400\n","Epoch 176/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4439 - acc: 0.1200\n","Epoch 177/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4780 - acc: 0.1200\n","Epoch 178/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.3800 - acc: 0.0800\n","Epoch 179/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.5285 - acc: 0.1000\n","Epoch 180/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4433 - acc: 0.0800\n","Epoch 181/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4193 - acc: 0.1400\n","Epoch 182/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.3840 - acc: 0.1400\n","Epoch 183/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4092 - acc: 0.1000\n","Epoch 184/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.4603 - acc: 0.0600\n","Epoch 185/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4666 - acc: 0.1000\n","Epoch 186/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4217 - acc: 0.1000\n","Epoch 187/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.5028 - acc: 0.1000\n","Epoch 188/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.6146 - acc: 0.0800\n","Epoch 189/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.3120 - acc: 0.1200\n","Epoch 190/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.3991 - acc: 0.1200\n","Epoch 191/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3677 - acc: 0.1400\n","Epoch 192/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.5310 - acc: 0.1200\n","Epoch 193/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.4309 - acc: 0.1000\n","Epoch 194/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5094 - acc: 0.1400\n","Epoch 195/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.3484 - acc: 0.1000\n","Epoch 196/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.4664 - acc: 0.1000\n","Epoch 197/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4560 - acc: 0.1000\n","Epoch 198/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.3950 - acc: 0.1200\n","Epoch 199/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4846 - acc: 0.1200\n","Epoch 200/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4516 - acc: 0.0800\n","Epoch 201/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.4992 - acc: 0.0800\n","Epoch 202/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.4816 - acc: 0.1200\n","Epoch 203/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.3369 - acc: 0.1000\n","Epoch 204/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4045 - acc: 0.1600\n","Epoch 205/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.4664 - acc: 0.1200\n","Epoch 206/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4094 - acc: 0.1000\n","Epoch 207/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4516 - acc: 0.1400\n","Epoch 208/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4797 - acc: 0.1000\n","Epoch 209/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3845 - acc: 0.1000\n","Epoch 210/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.3966 - acc: 0.0800\n","Epoch 211/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.3101 - acc: 0.1200\n","Epoch 212/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4344 - acc: 0.1200\n","Epoch 213/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.4401 - acc: 0.1400\n","Epoch 214/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.3959 - acc: 0.1200\n","Epoch 215/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4271 - acc: 0.0600\n","Epoch 216/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4163 - acc: 0.0800\n","Epoch 217/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.3853 - acc: 0.1200\n","Epoch 218/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3949 - acc: 0.1200\n","Epoch 219/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.3818 - acc: 0.1200\n","Epoch 220/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.3049 - acc: 0.1200\n","Epoch 221/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.3506 - acc: 0.1400\n","Epoch 222/300\n","1/1 [==============================] - 0s 35ms/step - loss: 3.3677 - acc: 0.1200\n","Epoch 223/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.3724 - acc: 0.1000\n","Epoch 224/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3568 - acc: 0.1000\n","Epoch 225/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4025 - acc: 0.1200\n","Epoch 226/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.2392 - acc: 0.1200\n","Epoch 227/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4265 - acc: 0.0800\n","Epoch 228/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4525 - acc: 0.1400\n","Epoch 229/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.4388 - acc: 0.1000\n","Epoch 230/300\n","1/1 [==============================] - 0s 37ms/step - loss: 3.2500 - acc: 0.1400\n","Epoch 231/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.3854 - acc: 0.1600\n","Epoch 232/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.4114 - acc: 0.1200\n","Epoch 233/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4263 - acc: 0.1000\n","Epoch 234/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4734 - acc: 0.0800\n","Epoch 235/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.6056 - acc: 0.1400\n","Epoch 236/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.3568 - acc: 0.1000\n","Epoch 237/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.3153 - acc: 0.1400\n","Epoch 238/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.5159 - acc: 0.0400\n","Epoch 239/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3870 - acc: 0.1000\n","Epoch 240/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.3837 - acc: 0.1000\n","Epoch 241/300\n","1/1 [==============================] - 0s 38ms/step - loss: 3.4598 - acc: 0.0400\n","Epoch 242/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.2746 - acc: 0.0800\n","Epoch 243/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.3831 - acc: 0.1200\n","Epoch 244/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.3537 - acc: 0.1000\n","Epoch 245/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.5258 - acc: 0.1000\n","Epoch 246/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.4793 - acc: 0.1200\n","Epoch 247/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.3933 - acc: 0.1000\n","Epoch 248/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.3318 - acc: 0.1000\n","Epoch 249/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4855 - acc: 0.1000\n","Epoch 250/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.4060 - acc: 0.1400\n","Epoch 251/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.3142 - acc: 0.1600\n","Epoch 252/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.2537 - acc: 0.1200\n","Epoch 253/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.4074 - acc: 0.1000\n","Epoch 254/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.7263 - acc: 0.0600\n","Epoch 255/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.6124 - acc: 0.0400\n","Epoch 256/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.2742 - acc: 0.0800\n","Epoch 257/300\n","1/1 [==============================] - 0s 38ms/step - loss: 3.2700 - acc: 0.1200\n","Epoch 258/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.3929 - acc: 0.1000\n","Epoch 259/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4562 - acc: 0.0600\n","Epoch 260/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.5796 - acc: 0.0600\n","Epoch 261/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.4150 - acc: 0.0600\n","Epoch 262/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3627 - acc: 0.0800\n","Epoch 263/300\n","1/1 [==============================] - 0s 25ms/step - loss: 3.3736 - acc: 0.1000\n","Epoch 264/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3013 - acc: 0.1000\n","Epoch 265/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.2590 - acc: 0.1600\n","Epoch 266/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3307 - acc: 0.1400\n","Epoch 267/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.3400 - acc: 0.1000\n","Epoch 268/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.2410 - acc: 0.1400\n","Epoch 269/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.2740 - acc: 0.1400\n","Epoch 270/300\n","1/1 [==============================] - 0s 36ms/step - loss: 3.3165 - acc: 0.1400\n","Epoch 271/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.2094 - acc: 0.1000\n","Epoch 272/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.2665 - acc: 0.1400\n","Epoch 273/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3424 - acc: 0.1000\n","Epoch 274/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.2585 - acc: 0.1200\n","Epoch 275/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.4073 - acc: 0.0800\n","Epoch 276/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.3091 - acc: 0.0800\n","Epoch 277/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.3105 - acc: 0.1200\n","Epoch 278/300\n","1/1 [==============================] - 0s 40ms/step - loss: 3.3872 - acc: 0.1000\n","Epoch 279/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.1722 - acc: 0.1200\n","Epoch 280/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.3435 - acc: 0.0800\n","Epoch 281/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.3338 - acc: 0.1800\n","Epoch 282/300\n","1/1 [==============================] - 0s 33ms/step - loss: 3.3849 - acc: 0.1000\n","Epoch 283/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.4056 - acc: 0.1000\n","Epoch 284/300\n","1/1 [==============================] - 0s 39ms/step - loss: 3.3093 - acc: 0.1000\n","Epoch 285/300\n","1/1 [==============================] - 0s 38ms/step - loss: 3.2678 - acc: 0.1000\n","Epoch 286/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.2176 - acc: 0.1400\n","Epoch 287/300\n","1/1 [==============================] - 0s 32ms/step - loss: 3.3659 - acc: 0.1200\n","Epoch 288/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.2525 - acc: 0.1600\n","Epoch 289/300\n","1/1 [==============================] - 0s 27ms/step - loss: 3.2064 - acc: 0.1200\n","Epoch 290/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4051 - acc: 0.1200\n","Epoch 291/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.3694 - acc: 0.1600\n","Epoch 292/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.2865 - acc: 0.1400\n","Epoch 293/300\n","1/1 [==============================] - 0s 29ms/step - loss: 3.2597 - acc: 0.1200\n","Epoch 294/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.4567 - acc: 0.1000\n","Epoch 295/300\n","1/1 [==============================] - 0s 30ms/step - loss: 3.2697 - acc: 0.1600\n","Epoch 296/300\n","1/1 [==============================] - 0s 31ms/step - loss: 3.1926 - acc: 0.0800\n","Epoch 297/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.2504 - acc: 0.1200\n","Epoch 298/300\n","1/1 [==============================] - 0s 26ms/step - loss: 3.2616 - acc: 0.1000\n","Epoch 299/300\n","1/1 [==============================] - 0s 28ms/step - loss: 3.2705 - acc: 0.1200\n","Epoch 300/300\n","1/1 [==============================] - 0s 34ms/step - loss: 3.3304 - acc: 0.1200\n"]}]},{"cell_type":"code","source":["pred = model.predict([\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['product_id']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['order_dow']),\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['order_hour_of_day']), #+ 1e-10, dtype=float\n","                     tf.keras.preprocessing.sequence.pad_sequences(test_data['days_since_prior_order']),\n","                    #  tf.keras.preprocessing.sequence.pad_sequences(test_data['Purchase_alarm'])\n","           ])\n","\n","pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QWWdGbKh_ld5","executionInfo":{"status":"ok","timestamp":1662622715469,"user_tz":-540,"elapsed":517,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"7a6ac34f-e733-44e1-8090-8d3159179ffd"},"id":"QWWdGbKh_ld5","execution_count":132,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2.0688000e-09, 1.4413932e-09, 1.1940046e-09, ..., 1.8301131e-09,\n","        1.3445823e-09, 1.1864404e-09],\n","       [1.3403433e-09, 9.8244890e-10, 7.8898937e-10, ..., 1.3093392e-09,\n","        8.9627528e-10, 7.8262691e-10],\n","       [1.5443266e-09, 1.1310910e-09, 9.1287394e-10, ..., 1.4950408e-09,\n","        1.0341791e-09, 9.0582863e-10],\n","       ...,\n","       [8.0346274e-10, 5.9848299e-10, 4.7214044e-10, ..., 8.2019141e-10,\n","        5.4044097e-10, 4.6776266e-10],\n","       [8.0346274e-10, 5.9848299e-10, 4.7214044e-10, ..., 8.2019141e-10,\n","        5.4044097e-10, 4.6776266e-10],\n","       [8.0346274e-10, 5.9848299e-10, 4.7214044e-10, ..., 8.2019141e-10,\n","        5.4044097e-10, 4.6776266e-10]], dtype=float32)"]},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["# 모델 저장\n","model.save(\"candidate_generation.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MJ-XMcKqDLXp","executionInfo":{"status":"ok","timestamp":1662622944123,"user_tz":-540,"elapsed":523,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"df1be49f-6af9-468e-9f54-8465ccfa29e2"},"id":"MJ-XMcKqDLXp","execution_count":133,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  layer_config = serialize_layer_fn(layer)\n"]}]},{"cell_type":"code","source":["# candidate generation: \n","###### 각 user당 top-20개의 추천 후보 데이터(predict_label)를 뽑아낸다.\n","###### 7-> 20개 늘린 이유: 예산 안에 안 들수도 있어서\n","\n","# k = np.sort((-pred_1).argsort()[:,:N]) \n","# np.argsort(): probability의 마이너스값을 작은 값부터 순서대로 데이터의 인덱스를 반환. ==> 즉, 양의값으로는 큰 값부터 반환한 셈.\n","# np.sort(): 인덱스 순으로 다시 정렬. 확률이 더 높은 것부터 보고싶으므로 레퍼런스에 있는 코드이지만 사용하지 않음.\n","\n","import numpy as np\n","N = 20\n","k = np.sort((-pred).argsort()[:,:N])\n","print(k)\n","k = k.flatten()\n","k[k>data[\"product\"].max()]=0\n","k = np.unique(k)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B9NY8L5bDPp7","executionInfo":{"status":"ok","timestamp":1662622997980,"user_tz":-540,"elapsed":564,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"b3200de7-aa2b-4f6c-d38a-8255e4d691b0"},"id":"B9NY8L5bDPp7","execution_count":134,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 6184  6318  7379 12831 17949 20600 21614 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 43504 45223 48205 49235]\n"," [  116  1957  4210  6318  7379  8048  9644 12831 20600 21903 21938 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [ 1957  4210  6318  7379  8048 12831 20600 21903 21938 23020 25653 27104\n","  31343 34969 38928 45223 46562 48205 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 28593 34969 36609 46562 49463 49683]\n"," [ 6184  6318  7379 12831 17949 20600 21614 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 45223 48205 49235 49683]\n"," [ 6184  6318  7379 12831 17949 20600 21903 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 45223 48205 49463 49683]\n"," [  116  1957  4210  6318  7379  8048  9644 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [ 6184  6318  7379 12831 17949 20600 21614 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 43504 45223 48205 49235]\n"," [  116  1957  4210  6318  7379  8048  9644 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 28593 34969 36609 46562 49463 49683]\n"," [  116  1957  4210  8048  9644 11250 13948 20600 21903 23020 24964 25653\n","  27104 28593 31343 34969 36609 46562 49463 49683]\n"," [  116  1957  4210  6318  7379  8048  9644 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  6318  7379  8048  9644 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [ 6184  6318  7379 12831 17949 20600 21614 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 45223 48205 49235 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [ 6184  6318  7379 12831 17949 20600 21614 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 45223 48205 49235 49683]\n"," [  116  1957  4210  6318  7379  8048  9644 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [ 1957  4210  6318  7379  8048  9644 12831 20600 21903 21938 23020 25653\n","  27104 31343 34969 38928 46562 48205 49463 49683]\n"," [ 1957  4210  6318  7379  8048 12831 20600 21903 21938 23020 25653 27104\n","  27156 31343 34969 38928 45223 48205 49463 49683]\n"," [ 5031  6184  7379  8859 12831 17949 21614 21938 27156 27845 27881 29941\n","  34969 36222 38928 41290 43504 45223 48205 49235]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  27104 28593 31343 34969 36609 46562 49463 49683]\n"," [ 5031  6184  6318  7379 12831 17949 21614 21938 25653 27156 27845 29941\n","  31343 34969 38928 41290 43504 45223 48205 49235]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [ 6184  6318  7379  8048 12831 17949 20600 21903 21938 25653 27156 27845\n","  29941 31343 34969 38928 45223 48205 49463 49683]\n"," [ 5031  6184  8859 13176 17949 21614 27156 27845 27881 29941 34969 36222\n","  38928 41290 43504 45007 45223 45856 48205 49235]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  8048  9644 11250 13948 20600 21903 23020 24964 25653\n","  27104 28593 31343 34969 36609 46562 49463 49683]\n"," [  116  1957  4210  8048  9644 11250 12831 13948 20600 21903 23020 25653\n","  27104 28593 31343 34969 36609 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]\n"," [  116  1957  4210  7379  8048  9644 11250 12831 13948 20600 21903 23020\n","  25653 27104 31343 34969 38928 46562 49463 49683]]\n"]}]},{"cell_type":"code","source":["len(k)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w1P5XXWTHhWn","executionInfo":{"status":"ok","timestamp":1662624091256,"user_tz":-540,"elapsed":526,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"a1f00381-93fb-4632-8515-21a6758d586b"},"id":"w1P5XXWTHhWn","execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/plain":["31"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["k"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uT7k1JbXHlLx","executionInfo":{"status":"ok","timestamp":1662624096627,"user_tz":-540,"elapsed":3,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"2dfdbf0d-f595-49f5-e746-09ee7cc9a559"},"id":"uT7k1JbXHlLx","execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([    0,   116,  1957,  4210,  5031,  6184,  6318,  7379,  8048,\n","        8859,  9644, 11250, 12831, 13176, 13948, 17949, 20600, 21614,\n","       21903, 21938, 23020, 24964, 25653, 27104, 27156, 27845, 27881,\n","       28593, 29941, 31343, 34969])"]},"metadata":{},"execution_count":141}]},{"cell_type":"markdown","source":["## 3-3) 순위모델 1,2안 (ranking model 1,2)\n","- 1안) 재주문 여부(reordered) 1: like, 0:dislike\n","- 2안) 구매 후 지난 시간 (days_prior_order) 1: like, 0: dislike (likelihood)"],"metadata":{"id":"2uCgbhBdCsGb"},"id":"2uCgbhBdCsGb"},{"cell_type":"code","source":["# load candidate_generation \n","model = tf.keras.models.load_model(\n","    'candidate_generation.h5',\n","    custom_objects={\n","        'L2NormLayer':L2NormLayer,\n","        'MaskedEmbeddingsAggregatorLayer':MaskedEmbeddingsAggregatorLayer\n","    }\n",")"],"metadata":{"id":"Dk3og3SGCrOf","executionInfo":{"status":"ok","timestamp":1662623011688,"user_tz":-540,"elapsed":515,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}}},"id":"Dk3og3SGCrOf","execution_count":135,"outputs":[]},{"cell_type":"code","source":["aisles = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/aisles.csv')\n","products = pd.read_csv('/content/drive/MyDrive/2022 마켓컬리 해커톤/Data/product_final.csv')\n","\n","\n","# 아이템의 속성(ex.aisle)을 불러오는 함수 \n","\n","aisle_cols = aisles['aisle'].values.tolist()\n","# type(aisle_cols)\n","type(aisle_cols)\n","aisle_cols\n","aisles_encoded = {x: i for i, x in enumerate(aisle_cols)}\n","\n","product_ids = products[\"product_id\"].unique().tolist()\n","# product_enc = {x: i for i, x in enumerate(product_ids)}\n","# product_enc\n","products.drop('Unnamed: 0', axis=1, inplace=True)\n","products.head(3)\n","product_enc = products\n","\n","# movies-> product_enc\n","# genres-> aisles\n","# aisles -> ['a', 'b', 'c', ...]\n","\n","def get_aisles(products, aisles):\n","\tdef get_all_aisles(ai):\n","\t\tactive = [str(aisles_encoded[aisle]) for aisle, a in zip(aisles, ai) if a==1]\n","\t\tif len(active) == 0:\n","\t\t\treturn '0'\n","\t\treturn ','.join((active))\n","\t\n","\tproducts['all_aisles'] = [\n","                            get_all_aisles(ai) for ai in zip(*[products[aisle] for aisle in aisles])\n","                            ]\n","\n","get_aisles(product_enc, aisle_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"id":"liSqdEf8ABXQ","executionInfo":{"status":"error","timestamp":1662627295949,"user_tz":-540,"elapsed":496,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"43c4460b-5333-4515-b728-a1521833c6bb"},"id":"liSqdEf8ABXQ","execution_count":149,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3360\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3361\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'prepared soups salads'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-149-c0ef21527ed9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     33\u001b[0m                             ]\n\u001b[1;32m     34\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 35\u001b[0;31m \u001b[0mget_aisles\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproduct_enc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maisle_cols\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-149-c0ef21527ed9>\u001b[0m in \u001b[0;36mget_aisles\u001b[0;34m(products, aisles)\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \tproducts['all_aisles'] = [\n\u001b[0;32m---> 32\u001b[0;31m                             \u001b[0mget_all_aisles\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mai\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mai\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mproducts\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maisle\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0maisle\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maisles\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m                             ]\n\u001b[1;32m     34\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-149-c0ef21527ed9>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \tproducts['all_aisles'] = [\n\u001b[0;32m---> 32\u001b[0;31m                             \u001b[0mget_all_aisles\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mai\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mai\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mproducts\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maisle\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0maisle\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maisles\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m                             ]\n\u001b[1;32m     34\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3456\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3457\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3458\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3459\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3460\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3361\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3363\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3364\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3365\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_scalar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhasnans\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'prepared soups salads'"]}]},{"cell_type":"code","source":["product_enc.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":174},"id":"qA4wbYrDDqBE","executionInfo":{"status":"error","timestamp":1662627154570,"user_tz":-540,"elapsed":495,"user":{"displayName":"HA EUN YIM","userId":"03805587612219022432"}},"outputId":"87111d07-ce56-4c76-d48d-a157c8e57884"},"id":"qA4wbYrDDqBE","execution_count":146,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-146-2bf1a7d6936a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mproduct_enc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'dict' object has no attribute 'head'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"7cUcHRR-TQYg"},"id":"7cUcHRR-TQYg","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"colab":{"provenance":[{"file_id":"1_vd0KfT8mVC_ZRUb17voFxpIAlqhvb4W","timestamp":1662453774656},{"file_id":"1RRyfYJS6WzzCO8HpSmgYMdkZh2fiknEv","timestamp":1661850525113}],"collapsed_sections":[]},"accelerator":"GPU","gpuClass":"standard"},"nbformat":4,"nbformat_minor":5}